function ContractAndPayment(b){this.rateChargeTaxesFees=b.rateChargesTaxes;
this.showAmountDue=b.showAmountDue;
this.tourContract=ko.observable(b.tourContract);
this.showAdvancePaymentAmountPaid=ko.observable(false);
this.tourAdvancedPayment=ko.observable(false);
this.showApplyVoucher=b.isVoucherAllowed;
this.hasFixedValueVoucherContract=(typeof b.hasFixedValueVoucher==="undefined")?false:b.hasFixedValueVoucher;
this.currencySymbol=ko.observable(rateChargeTaxesFees.currencySymbol);
this.cancelled=b.reservation.reservationStatusCode==="CN"||b.reservation.reservationStatusCode==="NS"||b.reservation.reservationStatusCode==="CO"||b.reservation.reservationStatusCode==="CL";
this.isCheckedInOrByPassed=ko.computed(function(){if(b.reservation.reservationCounterBypassed||b.reservation.reservationCheckedIn){return true
}return false
});
var a;
if(showAmountDue){this.amountDue=ko.observable(b.amountDue);
this.amountPaid=ko.observable(b.amountPaid);
this.showNegate=b.showNegate
}if(b.reservation.paymentType==="ADVANCE_PAYMENT"){a=getAdvancedPayText();
if(b.reservation.payment){this.tourAdvancedPaymentType=b.reservation.payment.methodOfPaymentCode+" *******"+b.reservation.payment.paymentCard.creditCardNumberLastFourDigits;
this.showAdvancePaymentAmountPaid=ko.observable(true);
this.tourAdvancedPayment=ko.observable(true);
this.totalPrice=ko.observable(rateChargeTaxesFees.totalPrice)
}}else{if(b.reservation.paymentType==="PREPAID_VOUCHER"){a=getVoucherText();
this.tourVoucherNumber=b.reservation.payment.voucher.voucherCode;
this.tourVoucherDays=b.reservation.payment.voucher.numberOfDays;
this.showVoucherTotal=ko.observable(true);
this.voucherTotal=ko.observable(b.voucherTotal);
this.rentalDays=ko.observable(b.reservation.baseReservation.rentalDuration)
}else{if(b.reservation.paymentType==="PAY_AT_DESTINATION"){a=getPayAtDestinationText()
}}}this.fixedValueText=getFixedValueText();
this.renterTotal=ko.observable(rateChargeTaxesFees.renterTotal);
this.rentalDays=ko.observable(b.reservation.baseReservation.rentalDuration);
this.tourMethodOfPayment=ko.observable(a);
this.tourVoucher=b.reservation.paymentType=="PREPAID_VOUCHER";
this.applyVoucherModalPathHref=ko.computed(function(){var c=getApplyVoucherModalPath()+".modal.html?rentalDays="+this.rentalDays();
return c
})
}var ConfirmationGlobal={confirmationNo:ko.observable()};
ko.bindingHandlers.stopBinding={init:function(){return{controlsDescendantBindings:true}
}};
function TourConfirmation(F){this.disableModifyLink=(typeof F.disableModifyLink==="undefined")?false:F.disableModifyLink;
this.isBypassAvailable=(typeof F.isBypassAvailable==="undefined")?false:F.isBypassAvailable;
this.hasFixedValueVoucherContract=(typeof F.hasFixedValueVoucher==="undefined")?false:F.hasFixedValueVoucher;
this.enablePolicies=ko.observable(typeof F.enablePolicies==="undefined"?true:F.enablePolicies);
var B=F.reservation;
this.showVirginAtlantic=ko.observable(B.virginBooking);
this.showBreadcrumb=ko.observable(F.showBreadcrumb);
this.searchResultsHref=ko.observable(F.searchResultsHref);
this.confirmationNumber=ko.observable(B.reservationNumber);
this.isEnableDriveAlliance=F.isEnableDriveAlliance;
this.checkIfTourCustomer=F.isTourCustomer;
this.isTourBooking=false;
this.virginOrTourRes=ko.computed(function(){if(showVirginAtlantic()||F.isTourCustomer){return true
}return false
});
this.isCheckedInOrByPassed=ko.computed(function(){if(B.reservationCounterBypassed||B.reservationCheckedIn){return true
}return false
});
this.hideCurrencyConversionFlag=F.hideCurrencyConversionFlag;
this.isAltResNumber=(typeof B.alternateReservationNumber==="undefined")?false:B.alternateReservationNumber;
this.prepaidVoucher=F.prepaidVoucher;
this.isVoucherFromOtherBookingChannel=F.vchPaymentType;
this.isReservationCheckedIn=B.reservationCheckedIn;
this.driverAddressLine1=ko.observable();
this.driverAddressLine2=ko.observable();
this.driverCity=ko.observable();
this.driverStateProvinceCode=ko.observable();
this.driverPostalCode=ko.observable();
this.driverCountryCode=ko.observable();
this.renterAddress=ko.observable();
this.showAmountDue=F.showAmountDue;
this.showAdvancePaymentAmountPaid=ko.observable(false);
this.primaryDriverAddrList=(typeof B.primaryDriver.addressList===null)?false:true;
if(primaryDriverAddrList===true){if(B.primaryDriver.addressList.length>0){this.isRenterAddress=true;
for(var w=0;
w<B.primaryDriver.addressList.length;
w++){driverAddressLine1=B.primaryDriver.addressList[w].addressLines[0];
driverAddressLine2=B.primaryDriver.addressList[w].addressLines[1];
driverCity=B.primaryDriver.addressList[w].city;
driverStateProvinceCode=B.primaryDriver.addressList[w].stateProvinceAbbreviation;
driverPostalCode=B.primaryDriver.addressList[w].postalCode;
driverCountryCode=B.primaryDriver.addressList[w].countryCode
}this.renterAddress=ko.computed(function(){return driverAddressLine1+" "+driverAddressLine2+", "+driverCity+", "+driverStateProvinceCode+" "+driverPostalCode+", "+driverCountryCode
})
}else{this.isRenterAddress=false
}}if(typeof B.primaryDriver.phoneMap==="undefined"||typeof B.primaryDriver.phoneMap==null||typeof B.primaryDriver.phoneMap.length==="undefined"){if(B.primaryDriver.phone==="undefined"||B.primaryDriver.phone==null){this.phoneNum=false
}else{this.phoneNum=B.primaryDriver.phone.number
}}else{this.phoneNum=B.primaryDriver.primaryTelephone
}this.driverLicense=(typeof B.primaryDriver.maskedLastFourDigits==="undefined")?false:B.primaryDriver.maskedLastFourDigits;
var e=(typeof B.primaryDriver.driverLicense==null)?false:B.primaryDriver.driverLicense;
if(e!==false&&e!==null){this.licenseIssueingCountry=(typeof B.primaryDriver.driverLicense.countryCode===null)?false:B.primaryDriver.driverLicense.countryCode;
this.licenseIssueingState=(typeof B.primaryDriver.driverLicense.stateProvinceCode==="undefined")?false:B.primaryDriver.driverLicense.stateProvinceCode;
this.licenseExpDate=(typeof B.primaryDriver.driverLicense.expirationDate==="undefined")?false:B.primaryDriver.driverLicense.expirationDate;
this.licenseIssuingDate=(typeof B.primaryDriver.driverLicense.issueDate==="undefined")?false:B.primaryDriver.driverLicense.issueDate;
this.dateOfBirth=(typeof B.primaryDriver.dateOfBirthStr==="undefined")?false:B.primaryDriver.dateOfBirthStr
}this.displayDiscountApplied=(typeof F.displayDiscountApplied==="undefined")?false:F.displayDiscountApplied;
var x=(typeof F.displayTotalSavings==="undefined")?false:F.displayTotalSavings;
this.showSavings=ko.observable(x);
this.disableSecretRates=(typeof F.disableSecretRates==="undefined")?false:F.disableSecretRates;
this.gdsOutputSecretRate=(typeof F.gdsOutputSecretRate!="undefined")?F.gdsOutputSecretRate:"";
if(typeof F.gdsOutputSecretRate!="undefined"){if(F.disableSecretRates===true&&F.gdsOutputSecretRate===false){this.disableSecretRates=ko.observable(true)
}else{this.disableSecretRates=ko.observable(false)
}}this.isPremiumTourPackageEligible=(B.premiumTourPackageEligibleFlag==="Y")?true:false;
var o=B.primaryDriver;
this.firstName=ko.observable(o.firstName);
ConfirmationGlobal.confirmationNo(B.reservationNumber);
this.lastName=ko.observable(o.lastName);
this.driverName=ko.computed(function(){return this.firstName()+" "+this.lastName()
});
this.driverEmail=ko.observable(o.emailAddress);
this.driverPhone=o.phone;
if(driverPhone){this.driverPhoneNumber=ko.observable(driverPhone.number)
}this.membershipNumber=(F.isAlamoInsider===true)?ko.observable(o.membershipNumber):false;
this.aiMembershipNumber=ko.observable(o.membershipNumber);
this.aiMembershipNumberValue=o.membershipNumber==null?true:false;
this.airline=F.airline;
if(airline){this.airlineName=ko.observable(airline.name);
this.flightNumber=ko.observable(B.flightNumber)
}this.frequentTravelerProgram=F.frequentTravelerProgram;
if(frequentTravelerProgram){this.loyaltyProgram=ko.observable(frequentTravelerProgram.name);
this.frequentTravelerProgramNumber=F.frequentTravelerProgramNumber
}this.accountName=F.accountName;
this.isCustomerExist=(this.accountName==null)?false:true;
this.pickUpDateTime=F.pickUpDateTimeStr;
this.dropOffDateTime=F.dropOffDateTimeStr;
var b=F.pickUp;
this.pickUpLocationName=ko.observable(b.locationName);
this.locationName=ko.observable(b.locationName);
if(b.airportLocation){this.pickUpLocationName(b.locationName+" ("+b.airportCode+")")
}else{this.pickUpLocationName(b.locationName)
}this.pickUpPhone=ko.observable(F.pickUpWebTelephoneNumber);
this.pickUpTollFreePhone=ko.observable(F.pickUpTollFreeNumber);
this.pickUpTollFreePhoneHref=ko.observable("tel:"+F.pickUpTollFreeNumber);
this.pickUpPhoneHref=ko.observable("tel:"+F.pickUpWebTelephoneNumber);
var h=b.address;
this.pickUpAddressLine1=ko.observable(h.addressLines[0]);
this.pickUpAddressLine2=ko.observable(h.addressLines[1]);
this.pickUpCity=h.city==null?"":h.city;
this.pickUpStateProvinceCode=h.stateProvinceAbbreviation==null?"":h.stateProvinceAbbreviation;
this.pickUpPostalCode=h.postalCode==null?"":h.postalCode;
this.pickUpCountryCode=F.pickUpLocCountryName==null?"":F.pickUpLocCountryName;
this.pickupAddressLineOne=ko.computed(function(){return h.addressLines[0]
});
this.pickupCSZDetails=ko.computed(function(){return this.pickUpCity+", "+this.pickUpStateProvinceCode+" "+this.pickUpPostalCode+" "+this.pickUpCountryCode
});
this.kioskService=ko.observable(b.enableKioskService);
var s=F.dropOff;
var l=F.pickUpOperatingHoursList;
var f=F.dropOffOperatingHoursList;
this.dropOffLocationName=ko.observable(s.locationName);
if(s.airportLocation){this.dropOffLocationName(s.locationName+" ("+s.airportCode+")")
}else{this.dropOffLocationName(s.locationName)
}this.dropOffPhone=ko.observable(F.dropOffWebTelephoneNumber);
this.dropOffTollFreePhone=ko.observable(F.dropOffTollFreeNumber);
this.dropOffTollFreePhoneHref=ko.observable("tel:"+F.dropOffTollFreeNumber);
this.dropOffPhoneHref=ko.observable("tel:"+F.dropOffWebTelephoneNumber);
var A=s.address;
this.dropOffAddressLine1=ko.observable(A.addressLines[0]);
this.dropOffAddressLine2=ko.observable(A.addressLines[1]);
this.dropOffCity=A.city==null?"":A.city;
this.dropOffStateProvinceCode=A.stateProvinceAbbreviation==null?"":A.stateProvinceAbbreviation;
this.dropOffPostalCode=A.postalCode==null?"":A.postalCode;
this.dropOffCountryCode=F.dropOffLocCountryName==null?"":F.dropOffLocCountryName;
this.dropOffAddressLineOne=ko.computed(function(){return A.addressLines[0]
});
this.dropOffCSZDetails=ko.computed(function(){return this.dropOffCity+", "+this.dropOffStateProvinceCode+" "+this.dropOffPostalCode+" "+this.dropOffCountryCode
});
this.pickUpStandardOperatingHours=ko.observableArray();
for(var w=0;
w<l.length;
w++){pickUpStandardOperatingHours.push({day:l[w].day,hour:l[w].hour=l[w].hour.replace("11:59pm",getMidNightText()),closed:l[w].closed,open24Hours:l[w].open24Hours})
}this.dropOffStandardOperatingHours=ko.observableArray();
for(var w=0;
w<f.length;
w++){dropOffStandardOperatingHours.push({day:f[w].day,hour:f[w].hour=f[w].hour.replace("11:59pm",getMidNightText()),closed:f[w].closed,open24Hours:f[w].open24Hours})
}this.isRewardPreference=(typeof F.rewardPreference==="undefined")?false:true;
if(isRewardPreference){this.rewardPreference=getRewardPreferenceText(F.rewardPreference)
}this.onewayRental=F.oneWayRental;
this.isEnableDriveAlliance=F.isEnableDriveAlliance;
this.enableDriveAlliancePickup=F.pickUp.enableDriveAlliance;
this.enableDriveAllianceDropOff=F.dropOff.enableDriveAlliance;
var m=F.vehicle;
this.orSimilarTextTranslationFlag=false;
this.vehicleName=ko.observable(m.vehicleTranslation.name);
this.vehicleSIPP=ko.observable(m.vehicleCategoryCode);
this.vehicleSimilars=ko.observable(m.vehicleTranslation.similarVehicles);
this.hideOrSimilarText=ko.observable(m.hideOrSimilarText);
this.orSimilarText=ko.observable(m.vehicleTranslation.orSimilarText);
if(m.vehicleTranslation.orSimilarText!=null){this.orSimilarTextTranslationFlag=true
}var I="";
if(m.imageSmallSideProfileNodePath!=null){I=doi.build({src:m.resourcePath.path,ext:m.imageSmallSideProfileNodePath.extension,lastModified:m.resourcePath.lastModified,size:320,resolution:"high",imageStyle:"imageSmallSideProfileNodePath"})
}this.imagePath=ko.observable(I);
this.onRequest=ko.observable(F.onRequest);
this.features=ko.observableArray();
var t=F.selectedVehicleFeatures.selectedVehicleFeatureMap;
for(var D in t){var y=t[D];
if(null!=y){this.features.push({name:y.name})
}}this.options=ko.observableArray(F.reservationOptions);
this.hasOptions=(this.options().length>0)?true:false;
this.coverages=ko.observableArray(F.reservationCoverages);
this.optionsExist=(options().length>0||coverages().length>0)?true:false;
this.freeUpgrade=ko.observable(F.freeUpgrade);
var n=F.rateChargeTaxesFees;
this.baseRate=ko.observable(n.baseRate);
this.baseRateList=ko.observableArray(n.baseRateLineItemList);
var C=this;
$.each(baseRateList(),function(J,K){this.durationCount=ko.observable(K.chargeUnit);
this.code=ko.observable(K.rateUnit);
var L=getDurationTypeText(this.code());
this.chargeRate=ko.observable(K.chargeRate);
if(C.disableSecretRates()){this.chargeDescription=ko.computed(function(){return this.durationCount()+" "+L
},this)
}else{this.chargeDescription=ko.computed(function(){return this.durationCount()+" "+L+" @ "+(C.disableSecretRates()?" ":" "+this.chargeRate()+" / "+L)
},this)
}this.displayCurrencySymbol=ko.observable(!C.disableSecretRates());
this.chargeAmount=ko.observable(C.disableSecretRates()?getIncludedText():K.chargeAmount)
});
this.totalSurchargesTaxes=ko.observable(n.totalChargesTaxes);
this.showAmountDue=F.showAmountDue;
this.calculatedAISavings=n.calculatedAISavings==null?"":ko.observable(n.calculatedAISavings);
this.showCalculatedAISavings=ko.computed(function(){return n.calculatedAISavings==null?false:true
});
this.addOnList=ko.observableArray(n.addOnLineItemList);
this.hasAddons=(this.addOnList().length>0)?true:false;
$.each(addOnList(),function(M,L){var K=L.jcrLineItemDescription==null?L.lineItemDescription:L.jcrLineItemDescription;
this.description=ko.observable(K);
this.price=ko.observable(L.chargeAmount);
this.isCurrencySymbolShown=true;
if(this.price()==0){this.price=getIncludedText();
this.isCurrencySymbolShown=false
}this.displayPrice=ko.observable(L.displayRate);
this.quantity=ko.observable(L.quantity);
this.code=ko.observable(L.rateUnit);
var J=getDurationTypeText(this.code());
this.rateUnitTypeCode=ko.observable(J);
var O=L.maxRate==null?"":L.maxRate;
this.tempMax=O!=0?O:"";
this.maxRate=ko.observable(L.maxRate);
this.index=ko.observable(M);
this.addFromPreference=ko.observable(L.addFromPreference);
this.isEnableDetailLink=ko.observable(L.enableEquipmentItemDetail);
var N="#";
if(L.equipmentDetailedDescriptionNodePath){N=detailPath();
N+="/country="+L.countryCode;
N+="/type=E";
N+="/code="+L.lineItem;
N+=".html"
}this.addonDetailsPath=ko.observable(N)
});
this.addonInclusiveLineItems=ko.observableArray(n.addOnInclusiveLineItems);
$.each(this.addonInclusiveLineItems(),function(K,J){if(J.lineItemDescription==="Additional Driver"){this.description=ko.observable(J.quantity+" "+J.lineItemDescription)
}else{this.description=ko.observable(J.lineItemDescription)
}this.price=getIncludedText();
this.currencySymbol=ko.observable(n.currencySymbol);
this.code=ko.observable(J.rateUnit);
this.index=ko.observable(K)
});
this.showAddonsSection=ko.computed(function(){return this.addOnList().length>0||this.addonInclusiveLineItems().length>0
},this);
this.reservationAddOnList=ko.observableArray(F.reservationOptions);
$.each(reservationAddOnList(),function(L,K){var J=K.jcrLineItemDescription==null?K.lineItemDescription:K.jcrLineItemDescription;
this.description=ko.observable(J);
this.isEnableDetailLink=ko.observable(K.enableEquipmentItemDetail);
var M="#";
if(K.equipmentDetailedDescriptionNodePath){M=detailPath();
M+="/country="+K.countryCode;
M+="/type=E";
M+="/code="+K.lineItem;
M+=".html"
}this.addonDetailsPath=ko.observable(M)
});
this.reservationCoverageList=ko.observableArray(F.reservationCoverages);
$.each(reservationCoverageList(),function(L,K){var J=K.jcrLineItemDescription==null?K.lineItemDescription:K.jcrLineItemDescription;
this.description=ko.observable(J);
this.isEnableDetailLink=ko.observable(K.enableInsuranceItemDetail);
var M="#";
if(K.insuranceDetailedDescriptionNodePath){M=detailPath();
M+="/country="+K.countryCode;
M+="/type=I";
M+="/code="+K.lineItem;
M+=".html"
}this.covDetailsPath=ko.observable(M)
});
this.coveragesList=ko.observableArray(n.coverageLineItemList);
this.hasCoverages=(this.coveragesList().length>0)?true:false;
$.each(coveragesList(),function(L,N){var K=N.jcrLineItemDescription==null?N.lineItemDescription:N.jcrLineItemDescription;
this.covDescription=ko.observable(K);
this.covPrice=ko.observable(N.chargeAmount);
if(this.covPrice()==0){this.covPrice=getIncludedText()
}this.covDisplayPrice=ko.observable(N.displayRate);
this.code=ko.observable(N.rateUnit);
var J=getDurationTypeText(this.code());
this.covRateUnitTypeCode=ko.observable(J);
this.addFromPreference=ko.observable(N.addFromPreference);
this.isEnableDetailLink=ko.observable(N.enableInsuranceItemDetail);
var M="#";
if(N.insuranceDetailedDescriptionNodePath){M=detailPath();
M+="/country="+N.countryCode;
M+="/type=I";
M+="/code="+N.lineItem;
M+=".html"
}this.coverageDetailsPath=ko.observable(M)
});
this.covInclusiveLineItems=ko.observableArray(n.coverageInclusiveLineItems);
$.each(this.covInclusiveLineItems(),function(K,J){this.isEnableDetailLink=ko.observable(J.enableInsuranceItemDetail);
this.description=ko.observable(J.lineItemDescription);
this.price=getIncludedText();
this.currencySymbol=ko.observable(n.currencySymbol);
this.code=ko.observable(J.rateUnit);
this.index=ko.observable(K)
});
this.showCoveragesSection=ko.computed(function(){return this.coveragesList().length>0||this.covInclusiveLineItems().length>0
},this);
this.fees=ko.observableArray(n.fees);
$.each(fees(),function(L,J){var K=J.lineItemDescription==null?"":J.lineItemDescription;
this.description=ko.observable(K);
this.price=ko.observable(J.chargeAmount)
});
this.feeInclusiveLineItems=ko.observableArray(n.feesInclusiveLineItems);
$.each(this.feeInclusiveLineItems(),function(K,J){this.description=ko.observable(J.lineItemDescription);
this.price=getIncludedText();
this.currencySymbol=ko.observable(n.currencySymbol);
this.code=ko.observable(J.rateUnit);
this.index=ko.observable(K)
});
this.showIncFeeSection=ko.computed(function(){return this.feeInclusiveLineItems().length>0
},this);
this.mileages=ko.observableArray([]);
this.hasLimitedMiles=ko.observable(F.hasLimitedMiles);
$.each(n.mileages,function(K,M){var N=getIncludedText();
var J="";
var L="";
if(M.chargeRate==0){K=(F.distanceUnit=="MI")?getUnlimitedMileageText():getUnlimitedKmsText()
}else{K=(F.distanceUnit=="MI")?(M.chargeUnit+getFreeMilesText()):(M.chargeUnit+getFreeKmsText());
if(F.distanceUnit=="MI"){J=M.chargeRate
}else{L=M.chargeRate
}}mileages.push({id:K,name:N,excessMile:J,excessKilometer:L})
});
this.tandmInclusiveLineItems=ko.observableArray(n.timeAndMileageInclusiveLineItems);
$.each(this.tandmInclusiveLineItems(),function(K,J){this.description=ko.observable(J.lineItemDescription);
this.price=getIncludedText();
this.currencySymbol=ko.observable(n.currencySymbol);
this.code=ko.observable(J.rateUnit);
this.index=ko.observable(K)
});
this.showTandMSection=ko.computed(function(){return this.tandmInclusiveLineItems().length>0||this.mileages().length>0
},this);
this.inclusiveLineItems=ko.observableArray(n.inclusiveLineItems);
$.each(inclusiveLineItems(),function(K,J){var L=J.jcrLineItemDescription==null?J.lineItemDescription:J.jcrLineItemDescription;
this.description=ko.observable(L);
this.price=getIncludedText();
this.isEnableDetailLink=false;
this.id=J.lineItemDescription;
this.code=ko.observable(J.rateUnit);
this.index=ko.observable(K);
var M="#";
if(J.enableInsuranceItemDetail||J.enableEquipmentItemDetail){this.isEnableDetailLink=ko.observable(true);
M=detailPath();
M+="/country="+J.countryCode;
if(J.enableInsuranceItemDetail){M+="/type=I"
}if(J.enableEquipmentItemDetail){M+="/type=E"
}M+="/code="+J.lineItem;
M+=".html"
}this.detailsPath=ko.observable(M)
});
this.showAddonsSection=ko.computed(function(){return this.addOnList().length>0||this.addonInclusiveLineItems().length>0
},this);
this.currencySymbol=ko.observable(n.currencySymbol);
this.currencySuffix=ko.observable(n.currencySuffix);
this.alternateCurrencySymbol=ko.observable(n.alternateCurrencySymbol);
this.alternateCurrencySuffix=ko.observable(n.alternateCurrencySuffix);
this.alternateEstimatedTotal=ko.observable(n.alternateEstimatedTotal);
this.alternateEstimatedTotalDriverCharges=ko.observable(n.alternateEstimatedTotalDriverCharges);
this.alternateVoucherTotal=ko.observable(n.alternateVoucherTotal);
this.isDisplayAlternateCurrency=ko.observable(n.showCurrencyConversion);
this.totalRentalOptions=ko.observable(n.totalRentalOptions);
this.isSavingsInNegative=ko.computed(function(){return n.totalSavings<0?true:false
},this);
this.totalSavings=ko.computed(function(){return n.totalSavings<0?Math.abs(n.totalSavings).toFixed(2):n.totalSavings
},this);
this.hideTotalSavings=ko.computed(function(){if(isHideTotalSavings()||F.hideTotalSavings){return true
}return false
});
this.totalPrice=ko.observable(n.totalPrice);
this.totalDriverCharges=ko.observable(n.totalDriverCharges);
this.differenceAmount=ko.observable(F.differenceAmount);
this.total=this.totalPrice;
this.totalDriver=this.totalDriverCharges;
this.totalDriverChargesDecimal="";
this.totalDecimal="";
this.estimatedTotal=ko.observable(n.totalPrice);
this.estimatedTotalDollars=this.estimatedTotal;
this.estimatedTotalCents="";
this.additionalInfo=ko.observableArray(F.reservationAdditionalInfo);
this.additionalInfoAvailable=(typeof F.reservationAdditionalInfo==="undefined")?false:true;
var v=F.customerName;
this.isContractApplied=ko.computed(function(){if(typeof v!=="undefined"){return true
}return false
});
this.isDisplaySavings=ko.observable(F.isDisplaySavings);
this.isDisplayDiscountApplied=ko.observable(F.isDisplayDiscountApplied);
this.isPayNowAvailable=ko.observable(F.isPayNowAvailable);
this.isLoggedInAlamoInsider=ko.observable(F.isLoyaltyUser);
this.isAIDiscountApplied=ko.computed(function(){return(this.isPayNowAvailable&&isLoggedInAlamoInsider)
});
var v=F.customerName;
this.isContractApplied=ko.computed(function(){if(typeof v!=="undefined"){return true
}return false
});
var H=F.paymentInfo;
this.paymentInfo=ko.observable(H);
if(H!=null){this.billingNumber=ko.observable(H.billingNumber);
this.paymentType=ko.observable(H.paymentType);
this.totalPaid=ko.observable(H.totalPaid);
this.authorizedAmount=ko.observable(H.authorizedAmount)
}this.isModifyResPath=ko.observable(F.isModifyResPath);
this.confirmationMessageInfoText=ko.computed(function(){var K=null;
if(B.reservationCounterBypassed||B.reservationCheckedIn){K=getCheckedInInfoText();
return K
}else{if(F.isModifyResPath){K=getConfirmationMessageModifyInfoText();
return K
}else{if(F.isEnableDriveAllianceAtChannel&&F.pickUp.enableDriveAlliance){K=getDriveAllianceConfirmationMessageInfoText()
}else{if(F.isEmeraldClubMember===true){K=getAIConfirmationMessageInfoText()
}else{K=getConfirmationMessageInfoText()
}}}}var J=ReplaceTokenInText("${email}",driverEmail(),K);
return J
});
var u=(typeof F.thirdPartyEmail==="undefined")?false:F.thirdPartyEmail;
var r=(typeof F.reservationCancelled==="undefined")?false:F.reservationCancelled;
this.isReservationCancelled=r;
this.isPendingReservation=(typeof F.isPendingReservation==="undefined")?false:F.isPendingReservation;
if(!isHideConfirmationText()&&!r&&!isPendingReservation){globalMessagesKO.pushMessage({code:"",fieldName:"",messageScope:"GLOBAL",messageSeverity:"success",message:confirmationMessageInfoText()});
if(u!=false){globalMessagesKO.pushMessage({code:"",fieldName:"",messageScope:"GLOBAL",messageSeverity:"success",message:getConfirmationMessagePartnerInfoText()+u})
}}if(!r&&isCheckedInOrByPassed()){globalMessagesKO.pushMessage({code:"",fieldName:"CheckedInModifyNotAllowed",messageScope:"GLOBAL",messageSeverity:"error",message:confirmationMessageInfoText()})
}this.printResConfirmationText=ko.computed(function(){var K=getPrintResConfirmationText();
var J=ReplaceTokenInText("${reservationNumber}",confirmationNumber(),K);
return J
});
this.printCheckInConfirmationText=ko.computed(function(){var K=getPrintCheckInConfirmationText();
var J=ReplaceTokenInText("${reservationNumber}",confirmationNumber(),K);
return J
});
this.startNewReservationText=ko.computed(function(){var J=getNewReservationText();
return J
});
this.cancelReservationText=ko.computed(function(){var J=getCancelReservationText();
return J
});
this.barCodeSuffix=ko.computed(function(){var K=getImgPath();
var J=K+confirmationNumber().substring(0,2)+"/"+confirmationNumber().substring(2,4)+"/"+confirmationNumber()+".png";
return J
});
this.cancelReservationModalPathHref=ko.computed(function(){var J=getCancelReservationModalPath()+".modal.html";
return J
});
this.cancelReservationOciModalPathHref=ko.computed(function(){var J=getCancelReservationOciModalPath()+".modal.html";
return J
});
this.pickUpWayFindingModalPathHref=ko.computed(function(){var K=getWayFindingModalPath();
var J=K+".modal.html/peopleSoftId="+b.peopleSoftId;
if(B.customerNumber!=null){J=J+"/customerNumber="+B.customerNumber
}if(B.reservationCounterBypassed){J=J+"/bypass=true"
}if(B.levelOfServiceCode){J=J+"/levelOfServiceCode="+B.levelOfServiceCode
}if(null!=F.insiderStateCode){J=J+"/insiderStateCode="+F.insiderStateCode
}J=J+".html";
return J
});
this.dropOffWayFindingModalPathHref=ko.computed(function(){var K=getWayFindingModalPath();
var J=K+".modal.html/peopleSoftId="+s.peopleSoftId;
if(B.customerNumber!=null){J=J+"/customerNumber="+B.customerNumber
}if(B.reservationCounterBypassed){J=J+"/bypass=true"
}if(B.levelOfServiceCode){J=J+"/levelOfServiceCode="+B.levelOfServiceCode
}if(null!=F.insiderStateCode){J=J+"/insiderStateCode="+F.insiderStateCode
}J=J+".html";
return J
});
this.dropOffLocationPathHref=ko.computed(function(){var K=getLocationsDetailsPath();
var J=K+"/location="+s.peopleSoftId+".html";
return J
});
this.pickUpLocationPathHref=ko.computed(function(){var K=getLocationsDetailsPath();
var J=K+"/location="+b.peopleSoftId+".html";
return J
});
var z=F.afterHoursModel;
this.afterhourpickup=ko.observable(typeof F.pickupAfterHours==="undefined"?false:F.pickupAfterHours);
this.afterhourdropoff=ko.observable(typeof F.dropoffAfterHours==="undefined"?false:F.dropoffAfterHours);
this.pickupAfterHoursPolicy=ko.observable(F.pickupLocationAfterHoursPolicy);
this.dropoffAfterHoursPolicy=ko.observable(F.dropoffLocationAfterHoursPolicy);
var d=getPolicyDetailModalPath();
this.afterhoursPolicyUrl=function(){var K=d+".modal.html";
var J=K+"?stationId="+b.stationId;
if(B.customerNumber!=null){J=J+"&customerNumber="+B.customerNumber
}return J
}.bind(this);
this.displayFrequentTravelerProgram=ko.computed(function(){var J=isLoyaltyProgramDisabled();
if(this.frequentTravelerProgram){return !J
}return false
});
this.displayArrivingAirlineInfo=ko.computed(function(){var J=isArrivingAirlineDisplayDisabled();
if(this.airline){return !J
}return false
});
this.displayInsiderNumber=ko.computed(function(){var J=isInsiderNumberDisplayDisabled();
if(o.membershipNumber){return !J
}return false
});
var k=F.allowedReservationAction;
this.cancelAllowed=k.cancelAllowed;
this.checkinAllowed=k.checkInAllowed;
this.modifyAllowed=k.modifyAllowed;
this.modifyLinkEnabled=ko.computed(function(){var J=isHideModifyResLinks();
if(this.modifyAllowed){return !J
}return false
});
this.checkinOnlyEnabled=ko.computed(function(){var J=isHideModifyResLinks();
if(!J){return this.checkinAllowed
}return false
});
this.printResNumberText=ko.computed(function(){var K=getPrintResNumberText();
var J=ReplaceTokenInText("${reservationNumber}",confirmationNumber(),K);
return J
});
this.checkInDriverIdList=ko.observableArray(o.legalIdsList);
this.checkInInfo=F.checkInInfo;
this.checkInPaymentInfo=null;
if(checkInInfo){this.primaryDriverInfo=checkInInfo.primaryDriverInfo;
if(primaryDriverInfo){this.primaryDriverName=primaryDriverInfo.name;
this.primaryDriverAddress=primaryDriverInfo.address;
this.primaryDriverLicenseNumber=primaryDriverInfo.licenseMaskedLastFourDigits;
this.primaryDriverIssueCountry=primaryDriverInfo.issueCountry;
this.primaryDriverExpDate=primaryDriverInfo.expDate;
this.primaryDriverIssuingDate=primaryDriverInfo.licenseIssueDate;
this.primaryDriverDateOfBirth=primaryDriverInfo.dateOfBirth
}this.additionalDriverInfoList=ko.observableArray(checkInInfo.additionalDriverInfoList);
if(additionalDriverInfoList()!==null&&additionalDriverInfoList().length!==0){$.each(additionalDriverInfoList(),function(K,J){this.additionalDriverName=J.name;
this.additionalDriverAddress=J.address;
this.additionalDriverLicenseNumber=J.licenseMaskedLastFourDigits;
this.additionalDriverIssueCountry=J.issueCountry;
this.additionalDriverExpDate=J.expDate;
this.additionalDriverissuingDate=J.licenseIssueDate;
this.additionalDriverDateOfBirth=J.dateOfBirth;
this.additionalDriverIndex=K+1
})
}this.checkInPaymentInfo=checkInInfo.paymentInfo;
if(checkInPaymentInfo){this.checkInPaymentType=checkInPaymentInfo.paymentType
}}this.addDriverInfo=F.addDriverInfo;
if(addDriverInfo){this.primaryDriverInfo=addDriverInfo.primaryDriverInfo;
if(primaryDriverInfo){this.primaryDriverName=primaryDriverInfo.name;
this.primaryDriverAddress=primaryDriverInfo.address;
this.primaryDriverLicenseNumber=primaryDriverInfo.licenseMaskedLastFourDigits;
this.primaryDriverIssueCountry=primaryDriverInfo.issueCountry;
this.primaryDriverExpDate=primaryDriverInfo.expDate;
this.primaryDriverIssuingDate=primaryDriverInfo.licenseIssueDate;
this.primaryDriverDateOfBirth=primaryDriverInfo.dateOfBirth
}this.additionalDriverInfoList=ko.observableArray(addDriverInfo.additionalDriverInfoList);
if(additionalDriverInfoList()!==null&&additionalDriverInfoList().length!==0){$.each(additionalDriverInfoList(),function(K,J){this.additionalDriverName=J.name;
this.additionalDriverAddress=J.address;
this.additionalDriverLicenseNumber=J.licenseMaskedLastFourDigits;
this.additionalDriverIssueCountry=J.issueCountry;
this.additionalDriverExpDate=J.expDate;
this.additionalDriverIssuingDate=J.licenseIssueDate;
this.additionalDriverDateOfBirth=J.dateOfBirth;
this.additionalDriverIndex=K+1
})
}this.showDriverDetails=(this.additionalDriverInfoList().length||this.primaryDriverInfo)?true:false
}this.isPrepayOrGuarantedRes=ko.observable(F.isPrepayOrGuarantedRes);
this.bypassReservation=ko.computed(function(){if(this.checkInPaymentInfo!=null){return true
}return false
});
this.checkInReservation=ko.computed(function(){if(this.checkInInfo!=null&&!bypassReservation()){return true
}return false
});
this.driverInfoSection=ko.computed(function(){if((this.isCheckedInOrByPassed&&additionalDriverInfoList().length>0)||(!this.isCheckedInOrByPassed&&(additionalDriverInfoList().length>0||this.primaryDriverInfo))){return true
}return false
});
this.isTACheckedInorBypassedRes=ko.computed(function(){if(isTAPath()=="true"&&(checkInReservation()||bypassReservation())){globalMessagesKO.pushMessage({code:"",fieldName:"",messageScope:"GLOBAL",messageSeverity:"success",message:getTACheckinBypassMessageInfoText()});
return true
}return false
});
this.isTABypassedRes=ko.computed(function(){if(isTAPath()=="true"&&bypassReservation()){return true
}return false
});
this.showCheckInPaymentInfo=(bypassReservation()&&!isPrepayOrGuarantedRes())?true:false;
this.checkInPathHref=ko.computed(function(){if(this.checkInReservation()){return getCheckinLinkPath()+"?modify=true"
}else{return getBypassLinkPath()+"?modify=true"
}});
this.emailLinkModalPathHref=ko.computed(function(){var K=getEmailLinkModalPath();
var J=K+".modal.html?confirmationNumber="+this.confirmationNumber()+"&firstName="+encodeURIComponent(this.firstName())+"&lastName="+encodeURIComponent(this.lastName());
if(this.bypassReservation()){J=J+"&barcodeUrl="+this.barCodeSuffix()
}return J
});
this.retailReservation=ko.computed(function(){if(!checkInReservation()&&!bypassReservation()){return true
}return false
});
if(this.checkInReservation()){this.printSelectMode=ko.observable("checkIn")
}else{if(this.bypassReservation()){this.printSelectMode=ko.observable("bypass")
}else{if(!this.bypassReservation()&&!this.isAlamoRwd){this.printSelectMode=ko.observable("responsive")
}else{this.printSelectMode=ko.observable("retail")
}}}this.hidePrintModal=typeof hidePrintModal==="undefined"||null==hidePrintModal?false:hidePrintModal;
this.enableCancelReservation=ko.computed(function(){if(!this.cancelAllowed){return false
}if(isHideCancelReservation()){return false
}if(!this.retailReservation()){return false
}return true
});
this.enableCancelOci=ko.computed(function(){if(!this.cancelAllowed){return false
}if(isHideCancelReservation()){return false
}if(this.retailReservation()){return false
}return true
});
this.isConfirmationWayfindingAvailableOne=ko.observable(null!==F.wayFindingData&&F.wayFindingData.wayFindingDataOne&&F.wayFindingData.wayFindingOneDetail.length>0);
this.isConfirmationWayfindingAvailableTwo=ko.observable(null!==F.wayFindingData&&F.wayFindingData.wayFindingDataTwo&&F.wayFindingData.wayFindingTwoDetail.length>0);
this.isConfirmationWayfindingAvailable=this.isConfirmationWayfindingAvailableOne()||this.isConfirmationWayfindingAvailableTwo();
var g=F.wayFindingData;
this.confirmationShortDescriptionOne=ko.observable("");
this.confirmationDirectionsOne=ko.observable("");
this.confirmationDirectionsOneTexts=ko.observable("");
if(this.isConfirmationWayfindingAvailableOne()){this.confirmationShortDescriptionOne=ko.observable(null==g.shortDescriptionOne?"":g.shortDescriptionOne);
this.confirmationDirectionsOneTexts=ko.computed(function(){return g.textsOne.join("<br>")
});
if(null!==g.pathOne){$.ajax({url:g.pathOne.path+".html",contentType:"application/x-www-form-urlencoded; charset=UTF-8",success:function(J){self.confirmationDirectionsOne(J);
$(".wayFindingCounterParOneContent").addClass("wayFindingPrint"+g.textsOne.length)
}})
}}this.confirmationShortDescriptionTwo=ko.observable("");
this.confirmationDirectionsTwo=ko.observable("");
this.confirmationDirectionsTwoTexts=ko.observable("");
if(this.isConfirmationWayfindingAvailableTwo()){this.confirmationShortDescriptionTwo=ko.observable(null==g.shortDescriptionTwo?"":g.shortDescriptionTwo);
this.confirmationDirectionsTwoTexts=ko.computed(function(){return g.textsTwo.join("<br>")
});
if(null!==g.pathTwo){$.ajax({url:g.pathTwo.path+".html",contentType:"application/x-www-form-urlencoded; charset=UTF-8",success:function(J){self.confirmationDirectionsTwo(J);
$(".wayFindingCounterParTwoContent").addClass("wayFindingPrint"+g.textsTwo.length)
}})
}}this.displayWayFindingModal=ko.computed(function(){var J=isWayFindingModalDisabled();
if(J||!this.isConfirmationWayfindingAvailable){return false
}else{return true
}});
this.showVoucherTotal=ko.observable(false);
this.payAtDestination=ko.observable(false);
var G={peopleSoftId:b.peopleSoftId,deletePeopleSoftId:b.peopleSoftId,secureToken:F.secureToken};
var p={peopleSoftId:s.peopleSoftId,deletePeopleSoftId:s.peopleSoftId,secureToken:F.secureToken};
function q(J,K,L){j(J,"POST",K,L)
}function a(J,K,L){j(J,"GET",K,L)
}function j(J,K,L,M){$.ajax({url:J,type:K,data:L,contentType:"application/x-www-form-urlencoded; charset=UTF-8",success:function(N){M(N);
N.messageList=processAllMessagesVM(this,N,{})
},error:function(){handleAjaxErrors(J,K,{})
}})
}function i(L,J){var K=[];
if(L){K=$.grep(L,function(N,M){return(N.peopleSoftId===J)
});
return K.length
}}var E=function(J){self.isMyFrequentDestinationForDropOffLocation(i(J.frequentDestinations,s.peopleSoftId));
self.isMyFrequentDestinationForPickUpLocation(i(J.frequentDestinations,b.peopleSoftId))
};
if(F.tourContract){this.isMyFrequentDestinationForPickUpLocation=ko.observable(0);
this.isMyFrequentDestinationForDropOffLocation=ko.observable(0);
this.addOrDeletePickUpLocationAsMyFrequentDestination=function(J){q(J,G,E)
};
this.addOrDeleteDropOffLocationAsMyFrequentDestination=function(J){q(J,p,E)
};
$(function(){var K=$("body").data("tourAdmin.agent.frequentdestinations.id");
var J=$("#"+K).data("tourAdmin.agent.frequentdestinations.get.url");
a(J,{},E)
});
this.driverCharges=(null!=F.rateChargeTaxesFees&&null!=F.rateChargeTaxesFees.totalDriverCharges)?true:false;
this.symbol=ko.observable(n.currencySymbol);
this.tourContract=ko.observable(F.tourContract);
var c;
if(showAmountDue){this.amountDue=ko.observable(F.amountDue);
this.amountPaid=ko.observable(F.amountPaid);
this.showNegate=F.showNegate;
this.alternateEstimatedTotalDriverCharges=F.alternateAmountDue
}if(F.reservation.paymentType==="ADVANCE_PAYMENT"){c=getAdvancedPaymentText();
this.tourAdvancedPaymentType=F.reservation.payment.methodOfPaymentCode+" *******"+F.reservation.payment.paymentCard.creditCardNumberLastFourDigits;
this.showAdvancePaymentAmountPaid=ko.observable(true)
}else{if(F.reservation.paymentType==="PREPAID_VOUCHER"){c=getVoucherText();
this.tourVoucherNumber=F.reservation.payment.voucher.voucherCode;
this.tourVoucherDays=F.reservation.payment.voucher.numberOfDays;
this.showVoucherTotal=ko.observable(true);
this.voucherTotal=ko.observable(n.voucherTotal);
this.rentalDays=ko.observable(F.reservation.baseReservation.rentalDuration)
}else{if(F.reservation.paymentType==="PAY_AT_DESTINATION"){c=getPayAtDestinationText();
this.voucherTotal=ko.observable(n.voucherTotal);
this.payAtDestination=ko.observable(true)
}}}this.renterTotal=ko.observable(n.renterTotal);
this.rentalDays=ko.observable(F.reservation.baseReservation.rentalDuration);
this.tourMethodOfPayment=ko.observable(c);
this.tourVoucher=F.reservation.paymentType=="PREPAID_VOUCHER";
this.tourAdvancedPayment=F.reservation.paymentType=="ADVANCE_PAYMENT"
}this.isPrepayRes=ko.observable(F.isPrepayRes);
this.prepayCancelReservationModalPathHref=ko.computed(function(){var J=getCancelReservationModalPath()+".modal.html";
return J
})
}var UrlBuilder=function(b,a){output=typeof b==="undefined"||null==b?"":b;
a=typeof a==="undefined"||null==a?"":a;
if(""!=a){if(a.indexOf("?")>-1){if(output.indexOf("?")==0){output=output+a.replace("?","")
}else{if(output.indexOf("?")>-1){output=output+a.replace("?","&")
}else{output=output+a
}}}else{if(output.indexOf("?")>-1){if(output.length>1){output=output+"&"
}output=output+a
}else{output=output+"?"+a
}}}return output
};
var Deeplink=function(b,d,a){baseUrl=typeof b==="undefined"||null==b?"":b;
var c=typeof d==="undefined"||null==d?"":d;
if(baseUrl.indexOf("?")<0&&baseUrl.indexOf("/")<0){baseUrl="?"+baseUrl;
c=c.replace("?","")
}output=UrlBuilder(baseUrl,c);
output=UrlBuilder(output,a);
if(output.indexOf("lastName")>=0&&output.indexOf("firstName")>=0&&output.indexOf("membershipNumber")>=0){output=UrlBuilder(output,"dealAIDeeplinked=true")
}return output
};
$(document).ready(function(){$(".tripMore").live("click",function(){$(".tripDirections div.longDescription").toggle();
$(".tripMore").hide();
return false
})
});
var ConfirmationSidebar=function(b){this.confirmationstatus=ko.observable(b.status);
this.bypassavailable=ko.observable(b.bypassAvailable);
this.alamoInsider=ko.observable(b.alamoInsider);
this.checkInCompleted=ko.computed(function(){return(this.confirmationstatus()==="checkinCompleted")
});
this.bypassCompleted=ko.computed(function(){return(this.confirmationstatus()==="bypassCompleted")
});
this.responsiveDefault=ko.computed(function(){return(this.confirmationstatus()==="responsiveDefault")
});
this.responsiveECMember=ko.computed(function(){return(this.confirmationstatus()==="responsiveECMember")
});
this.confdefaultstatus=ko.computed(function(){return(this.confirmationstatus()==="default")
});
this.viewOnlyStatus=ko.computed(function(){return(this.confirmationstatus()==="viewOnly")
});
this.bypassCounter=ko.computed(function(){return((this.confdefaultstatus()||this.responsiveDefault())&&this.bypassavailable())
});
this.checkIn=ko.computed(function(){return((this.confdefaultstatus()||this.responsiveDefault())&&!this.bypassavailable())
});
this.firstName=ko.observable(b.firstName);
this.lastName=ko.observable(b.lastName);
this.checkInPath=ko.observable(b.checkInPath);
if(b.ReservationStatus=="pending"){var e=getPendingModalURL()+".modal.html";
initModal("sm","true",e);
$(function(){$(".buttonSection").hide()
})
}if(b.pickUpLocation!="undefined"){this.wayFindingModalPathHref=ko.computed(function(){var g=getWayFindingModalPath();
var f=g+".modal.html/peopleSoftId="+b.pickUpLocation.peopleSoftId;
if(b.reservation.customerNumber!==null){f=f+"/customerNumber="+b.reservation.customerNumber
}if(b.reservation.reservationCounterBypassed){f=f+"/bypass=true"
}f=f+".html";
return f
});
this.pickUpDateTime=ko.observable(b.pickUpLocation.pickUpDateTime);
this.dropOffDateTime=ko.observable(b.pickUpLocation.dropOffDateTime);
this.pickUpLocationName=ko.observable(b.pickUpLocation.locationName);
this.pickUpLocationCity=ko.observable(b.pickUpLocation.address.city);
this.pickUpLocationStateProvinceCode=ko.observable(b.pickUpLocation.address.stateProvinceAbbreviation);
this.pickUpLocationPostalCode=ko.observable(b.pickUpLocation.address.postalCode);
this.pickUpLocationCountryCode=ko.observable(b.pickUpLocCountryName);
this.pickUpAddressLines=ko.observableArray();
var d;
d=b.pickUpLocation.address.addressLines;
for(var a=0;
a<d.length;
a++){pickUpAddressLines.push({line:d[a]})
}this.pickUpStandardOperatingHours=ko.observableArray();
var c;
c=b.pickUpOperatingHoursList;
for(var a=0;
a<c.length;
a++){pickUpStandardOperatingHours.push({day:c[a].day,hour:c[a].hour,closed:c[a].closed,open24Hours:c[a].open24Hours})
}this.pickUpLocationPhone=ko.observable(b.defaultPhoneNumber);
this.isAfterHoursAvailable=ko.observable(b.afterHoursAvailable)
}this.isLosWayfindingAvailable=ko.observable(b.isLosWayfindingAvailable)
};
var ConfirmationGlobal={confirmationNo:ko.observable()};
function Confirmation(y){this.disableModifyLink=(typeof y.disableModifyLink==="undefined")?false:y.disableModifyLink;
var w=y.reservation;
this.isLacCountries=y.isLacCountries!="undefined"?y.isLacCountries:false;
this.isEnableDriveAlliance=y.isEnableDriveAlliance;
this.showVirginAtlantic=ko.observable(w.virginBooking);
this.enableDriveAlliancePickup=y.pickUp.enableDriveAlliance;
this.checkIfTourCustomer=y.isTourCustomer;
this.enableDriveAllianceDropOff=y.dropOff.enableDriveAlliance;
this.refundAmount=ko.observable(y.refundAmount);
this.cancelationFee=ko.observable(y.cancelationFee);
this.virginOrTourRes=ko.computed(function(){if(showVirginAtlantic()||y.isTourCustomer){return true
}return false
});
this.showPayNowGuaCancelled=ko.computed(function(){if(y.reservationCancelled&&w.baseReservation.guaranteedResPayNow){return true
}return false
});
this.guaPrePayCancelled=showPayNowGuaCancelled();
this.showPayLaterGuaCancelled=ko.computed(function(){if(y.reservationCancelled&&w.baseReservation.guaranteedResPayLater){return true
}return false
});
this.guaPreLaterCancelled=showPayLaterGuaCancelled();
this.showForPayNowAndLaterGauCancelled=ko.computed(function(){if(guaPrePayCancelled||guaPreLaterCancelled){return true
}return false
});
this.showForPayLaterGuaRefundLabel=ko.computed(function(){if(y.cancelationFee>0&&guaPreLaterCancelled){return true
}return false
});
this.showLabelPreLaterCancelled=showForPayLaterGuaRefundLabel();
this.prepaidVoucher=y.prepaidVoucher;
this.isVoucherFromOtherBookingChannel=y.vchPaymentType;
this.isTourCustomer=y.isTourCustomer;
this.renterTotal=y.renterTotal;
this.alternateRenterTotal=y.alternateRenterTotal;
this.isTourBooking=y.isTourBooking;
this.confirmationNumber=ko.observable(w.reservationNumber);
this.isBypassAvailable=y.isBypassAvailable;
this.isAltResNumber=false;
this.hideCurrencyConversionFlag=y.hideCurrencyConversionFlag;
this.displayDiscountApplied=(typeof y.displayDiscountApplied==="undefined")?false:y.displayDiscountApplied;
var r=(typeof y.displayTotalSavings==="undefined")?false:y.displayTotalSavings;
this.showSavings=ko.observable(r);
this.disableSecretRates=(typeof y.disableSecretRates==="undefined")?false:y.disableSecretRates;
this.isPremiumTourPackageEligible=(w.premiumTourPackageEligibleFlag==="Y")?true:false;
var i=w.primaryDriver;
this.firstName=ko.observable(i.firstName);
ConfirmationGlobal.confirmationNo(w.reservationNumber);
this.lastName=ko.observable(i.lastName);
this.showAmountDue=y.showAmountDue;
this.driverName=ko.computed(function(){return this.firstName()+" "+this.lastName()
});
this.driverEmail=ko.observable(i.emailAddress);
this.driverPhone=i.phone;
if(driverPhone){this.driverPhoneNumber=ko.observable(driverPhone.number)
}this.membershipNumber=(y.isAlamoInsider===true)?ko.observable(i.membershipNumber):false;
this.aiMembershipNumber=ko.observable(i.membershipNumber);
this.airline=y.airline;
if(airline){this.airlineName=ko.observable(airline.name);
this.flightNumber=ko.observable(w.flightNumber)
}this.frequentTravelerProgram=y.frequentTravelerProgram;
if(frequentTravelerProgram){this.loyaltyProgram=ko.observable(frequentTravelerProgram.name);
this.frequentTravelerProgramNumber=y.frequentTravelerProgramNumber
}this.accountName=y.accountName;
this.isCustomerExist=(this.accountName==null)?false:true;
this.isTravelAgentPath=ko.observable(typeof y.isTravelAgentPath==="undefined"?false:y.isTravelAgentPath);
if(isTravelAgentPath){this.isAgentCIDLogin=ko.observable(typeof y.isAgentCIDLogin!=="undefined"?y.isAgentCIDLogin:false);
this.travelAgencyName=ko.observable(typeof y.travelAgencyName=="undefined"||y.travelAgencyName==null||y.travelAgencyName==""?"":y.travelAgencyName);
this.travelAgencyEmailAddress=ko.observable(typeof y.travelAgentEmailAddress=="undefined"||y.travelAgentEmailAddress==null||y.travelAgentEmailAddress==""?"":y.travelAgentEmailAddress);
this.travelAgentcashInClubId=ko.observable(typeof y.cashInClubId=="undefined"||y.cashInClubId==null||y.cashInClubId==""?false:y.cashInClubId);
this.travelAgentContractId=ko.observable(typeof y.travelAgentContractId=="undefined"||y.travelAgentContractId==null||y.travelAgentContractId==""?false:y.travelAgentContractId);
this.travelAgentProductCode=ko.observable(typeof y.productCode=="undefined"||y.productCode==null||y.productCode==""?false:y.productCode);
this.travelAgentCouponCode=ko.observable(typeof y.couponCode=="undefined"||y.couponCode==null||y.couponCode==""?false:y.couponCode);
if(w.bookingAgent&&w.bookingAgent.phone){driverPhone=true;
this.driverPhoneNumber=ko.observable(w.bookingAgent.phone.number)
}}this.pickUpDateTime=y.pickUpDateTimeStr;
this.dropOffDateTime=y.dropOffDateTimeStr;
var a=y.pickUp;
this.pickUpLocationName=ko.observable(a.locationName);
this.locationName=ko.observable(a.locationName);
if(a.airportLocation){this.pickUpLocationName(a.locationName+" ("+a.airportCode+")")
}else{this.pickUpLocationName(a.locationName)
}this.pickUpPhone=ko.observable(y.pickUpWebTelephoneNumber);
this.pickUpPhoneHref=ko.observable("tel:"+y.pickUpWebTelephoneNumber);
var e=a.address;
this.pickUpAddressLine1=ko.observable(e.addressLines[0]);
this.pickUpAddressLine2=ko.observable(e.addressLines[1]);
this.pickUpCity=e.city==null?"":e.city;
this.pickUpStateProvinceCode=e.stateProvinceAbbreviation==null?"":e.stateProvinceAbbreviation;
this.pickUpPostalCode=e.postalCode==null?"":e.postalCode;
this.pickUpCountryCode=y.pickUpLocCountryName==null?"":y.pickUpLocCountryName;
this.pickupCSZDetails=ko.computed(function(){return this.pickUpCity+", "+this.pickUpStateProvinceCode+" "+this.pickUpPostalCode+" "+this.pickUpCountryCode
});
this.kioskService=ko.observable(a.enableKioskService);
var l=y.dropOff;
var g=y.pickUpOperatingHoursList;
var c=y.dropOffOperatingHoursList;
this.dropOffLocationName=ko.observable(l.locationName);
if(l.airportLocation){this.dropOffLocationName(l.locationName+" ("+l.airportCode+")")
}else{this.dropOffLocationName(l.locationName)
}this.dropOffPhone=ko.observable(y.dropOffWebTelephoneNumber);
this.dropOffPhoneHref=ko.observable("tel:"+y.dropOffWebTelephoneNumber);
var v=l.address;
this.dropOffAddressLine1=ko.observable(v.addressLines[0]);
this.dropOffAddressLine2=ko.observable(v.addressLines[1]);
this.dropOffCity=v.city==null?"":v.city;
this.dropOffStateProvinceCode=v.stateProvinceAbbreviation==null?"":v.stateProvinceAbbreviation;
this.dropOffPostalCode=v.postalCode==null?"":v.postalCode;
this.dropOffCountryCode=y.dropOffLocCountryName==null?"":y.dropOffLocCountryName;
this.dropOffCSZDetails=ko.computed(function(){return this.dropOffCity+", "+this.dropOffStateProvinceCode+" "+this.dropOffPostalCode+" "+this.dropOffCountryCode
});
this.pickUpStandardOperatingHours=ko.observableArray();
for(var q=0;
q<g.length;
q++){pickUpStandardOperatingHours.push({day:g[q].day,hour:g[q].hour=g[q].hour.replace("11:59pm",getMidNightText()),closed:g[q].closed,open24Hours:g[q].open24Hours})
}this.dropOffStandardOperatingHours=ko.observableArray();
for(var q=0;
q<c.length;
q++){dropOffStandardOperatingHours.push({day:c[q].day,hour:c[q].hour=c[q].hour.replace("11:59pm",getMidNightText()),closed:c[q].closed,open24Hours:c[q].open24Hours})
}this.isRewardPreference=(typeof y.rewardPreference==="undefined")?false:true;
if(isRewardPreference){this.rewardPreference=getRewardPreferenceText(y.rewardPreference)
}this.onewayRental=y.oneWayRental;
var h=y.vehicle;
this.orSimilarTextTranslationFlag=false;
this.vehicleName=ko.observable(h.vehicleTranslation.name);
this.vehicleSIPP=ko.observable(h.vehicleCategoryCode);
this.vehicleSimilars=ko.observable(h.vehicleTranslation.similarVehicles);
this.hideOrSimilarText=ko.observable(h.hideOrSimilarText);
this.orSimilarText=ko.observable(h.vehicleTranslation.orSimilarText);
if(h.vehicleTranslation.orSimilarText!=null){this.orSimilarTextTranslationFlag=true
}var A="";
if(h.imageSmallSideProfileNodePath!=null){A=doi.build({src:h.resourcePath.path,ext:h.imageSmallSideProfileNodePath.extension,lastModified:h.resourcePath.lastModified,size:320,resolution:"high",imageStyle:"imageSmallSideProfileNodePath"})
}this.imagePath=ko.observable(A);
this.onRequest=ko.observable(y.onRequest);
this.features=ko.observableArray();
var n=y.selectedVehicleFeatures.selectedVehicleFeatureMap;
for(var x in n){var s=n[x];
if(null!=s){this.features.push({name:s.name})
}}this.options=ko.observableArray(y.reservationOptions);
this.hasOptions=(this.options().length>0)?true:false;
this.coverages=ko.observableArray(y.reservationCoverages);
this.optionsExist=(options().length>0||coverages().length>0)?true:false;
this.freeUpgrade=ko.observable(y.freeUpgrade);
var j=y.rateChargeTaxesFees;
this.baseRate=ko.observable(j.baseRate);
this.isXXOVoucherMOP=y.isXXOVoucherMOP;
this.estimatedTotal=ko.observable(j.totalPrice);
this.rentersTotal=ko.observable(j.renterTotal);
this.vouchersTotal=ko.observable(j.voucherTotal);
this.baseRateList=ko.observableArray(j.baseRateLineItemList);
$.each(baseRateList(),function(B,C){this.durationCount=ko.observable(C.chargeUnit);
this.code=ko.observable(C.rateUnit);
var D=getDurationTypeText(this.code());
this.chargeRate=ko.observable(C.chargeRate);
this.chargeDescription=ko.computed(function(){return this.durationCount()+"  "+D+" at"+(disableSecretRates?" ":" "+this.chargeRate()+" / "+D)
},this);
this.displayCurrencySymbol=ko.observable(!disableSecretRates);
this.chargeAmount=ko.observable(disableSecretRates?getIncludedText():C.chargeAmount)
});
this.totalSurchargesTaxes=ko.observable(j.totalChargesTaxes);
this.calculatedAISavings=j.calculatedAISavings==null?"":ko.observable(j.calculatedAISavings);
this.showCalculatedAISavings=ko.computed(function(){return j.calculatedAISavings==null?false:true
});
this.addOnItem=ko.observableArray(j.addOnLineItemList);
this.showAddOnItem=ko.computed(function(){return(this.addOnItem().length>0)?true:false
});
this.addOnList=(j.addOnLineItemList.length>0)?ko.observable(j.addOnLineItemList):ko.observable([]);
this.hasAddons=(this.addOnList().length>0)?true:false;
$.each(addOnList(),function(E,D){var C=D.jcrLineItemDescription==null?D.lineItemDescription:D.jcrLineItemDescription;
this.description=ko.observable(C);
this.price=ko.observable(D.chargeAmount);
this.isCurrencySymbolShown=true;
if(this.price()==0){this.price=getIncludedText();
this.isCurrencySymbolShown=false
}this.displayPrice=ko.observable(D.displayRate);
this.quantity=ko.observable(D.quantity);
this.code=ko.observable(D.rateUnit);
var B=getDurationTypeText(this.code());
this.rateUnitTypeCode=ko.observable(B);
var G=D.maxRate==null?"":D.maxRate;
this.tempMax=G!=0?G:"";
this.maxRate=ko.observable(D.maxRate);
this.index=ko.observable(E);
this.addFromPreference=ko.observable(D.addFromPreference);
this.isEnableDetailLink=ko.observable(D.enableEquipmentItemDetail);
var F="#";
if(D.equipmentDetailedDescriptionNodePath){F=detailPath();
F+="/country="+D.countryCode;
F+="/type=E";
F+="/code="+D.lineItem;
F+=".html"
}this.addonDetailsPath=ko.observable(F)
});
this.reservationAddOnList=ko.observableArray(y.reservationOptions);
$.each(reservationAddOnList(),function(D,C){var B=C.jcrLineItemDescription==null?C.lineItemDescription:C.jcrLineItemDescription;
this.description=ko.observable(B);
this.isEnableDetailLink=ko.observable(C.enableEquipmentItemDetail);
var E="#";
if(C.equipmentDetailedDescriptionNodePath){E=detailPath();
E+="/country="+C.countryCode;
E+="/type=E";
E+="/code="+C.lineItem;
E+=".html"
}this.addonDetailsPath=ko.observable(E)
});
this.reservationCoverageList=ko.observableArray(y.reservationCoverages);
$.each(reservationCoverageList(),function(D,C){var B=C.jcrLineItemDescription==null?C.lineItemDescription:C.jcrLineItemDescription;
this.description=ko.observable(B);
this.isEnableDetailLink=ko.observable(C.enableInsuranceItemDetail);
var E="#";
if(C.insuranceDetailedDescriptionNodePath){E=detailPath();
E+="/country="+C.countryCode;
E+="/type=I";
E+="/code="+C.lineItem;
E+=".html"
}this.covDetailsPath=ko.observable(E)
});
this.coveragesList=ko.observableArray(j.coverageLineItemList);
this.hasCoverages=(this.coveragesList().length>0)?true:false;
$.each(coveragesList(),function(D,F){var C=F.jcrLineItemDescription==null?F.lineItemDescription:F.jcrLineItemDescription;
this.covDescription=ko.observable(C);
this.covPrice=ko.observable(F.chargeAmount);
if(this.covPrice()==0){this.covPrice=getIncludedText()
}this.covDisplayPrice=ko.observable(F.displayRate);
this.code=ko.observable(F.rateUnit);
var B=getDurationTypeText(this.code());
this.covRateUnitTypeCode=ko.observable(B);
this.addFromPreference=ko.observable(F.addFromPreference);
this.isEnableDetailLink=ko.observable(F.enableInsuranceItemDetail);
var E="#";
if(F.insuranceDetailedDescriptionNodePath){E=detailPath();
E+="/country="+F.countryCode;
E+="/type=I";
E+="/code="+F.lineItem;
E+=".html"
}this.coverageDetailsPath=ko.observable(E)
});
this.covInclusiveLineItems=ko.observableArray(j.coverageInclusiveLineItems);
$.each(this.covInclusiveLineItems(),function(C,B){this.isEnableDetailLink=ko.observable(B.enableInsuranceItemDetail);
this.description=ko.observable(B.lineItemDescription);
this.price=getIncludedText();
this.currencySymbol=ko.observable(j.currencySymbol);
this.code=ko.observable(B.rateUnit);
this.index=ko.observable(C)
});
this.showCoveragesSection=ko.computed(function(){return this.coveragesList().length>0||this.covInclusiveLineItems().length>0
},this);
this.fees=ko.observableArray(j.fees);
$.each(fees(),function(D,B){var C=B.lineItemDescription==null?"":B.lineItemDescription;
this.description=ko.observable(C);
this.price=ko.observable(B.chargeAmount)
});
this.feeInclusiveLineItems=ko.observableArray(j.feesInclusiveLineItems);
$.each(this.feeInclusiveLineItems(),function(C,B){this.description=ko.observable(B.lineItemDescription);
this.price=getIncludedText();
this.currencySymbol=ko.observable(j.currencySymbol);
this.code=ko.observable(B.rateUnit);
this.index=ko.observable(C)
});
this.showIncFeeSection=ko.computed(function(){return this.feeInclusiveLineItems().length>0
},this);
this.mileages=ko.observableArray([]);
this.hasLimitedMiles=ko.observable(y.hasLimitedMiles);
$.each(j.mileages,function(C,E){var F=getIncludedText();
var B="";
var D="";
if(E.chargeRate==0){C=(y.distanceUnit=="MI")?getUnlimitedMileageText():getUnlimitedKmsText()
}else{C=(y.distanceUnit=="MI")?(E.chargeUnit+getFreeMilesText()):(E.chargeUnit+getFreeKmsText());
if(y.distanceUnit=="MI"){B=E.chargeRate
}else{D=E.chargeRate
}}mileages.push({id:C,name:F,excessMile:B,excessKilometer:D})
});
this.tandmInclusiveLineItems=ko.observableArray(j.timeAndMileageInclusiveLineItems);
$.each(this.tandmInclusiveLineItems(),function(C,B){this.description=ko.observable(B.lineItemDescription);
this.price=getIncludedText();
this.currencySymbol=ko.observable(j.currencySymbol);
this.code=ko.observable(B.rateUnit);
this.index=ko.observable(C)
});
this.showTandMSection=ko.computed(function(){return this.tandmInclusiveLineItems().length>0||this.mileages().length>0
},this);
this.inclusiveLineItems=ko.observableArray(j.inclusiveLineItems);
$.each(inclusiveLineItems(),function(C,B){if(y.isTourCustomer&&B.lineItem==="AD"){B.lineItemDescription=B.quantity+B.lineItemDescription
}else{B.lineItemDescription=B.lineItemDescription
}var D=B.jcrLineItemDescription==null?B.lineItemDescription:B.jcrLineItemDescription;
this.description=ko.observable(D);
this.price=getIncludedText();
this.isEnableDetailLink=false;
this.id=B.lineItemDescription;
this.code=ko.observable(B.rateUnit);
this.index=ko.observable(C);
var E="#";
if(B.enableInsuranceItemDetail||B.enableEquipmentItemDetail){this.isEnableDetailLink=true;
E=detailPath();
E+="/country="+B.countryCode;
if(B.enableInsuranceItemDetail){E+="/type=I"
}if(B.enableEquipmentItemDetail){E+="/type=E"
}E+="/code="+B.lineItem;
E+=".html"
}this.detailsPath=ko.observable(E)
});
this.showAddonsSection=ko.computed(function(){return this.addOnList().length>0||this.inclusiveLineItems().length>0
},this);
this.addonInclusiveLineItems=ko.observableArray(j.addOnInclusiveLineItems);
$.each(this.addonInclusiveLineItems(),function(C,B){this.description=ko.observable(B.lineItemDescription);
this.price=getIncludedText();
this.currencySymbol=ko.observable(j.currencySymbol);
this.code=ko.observable(B.rateUnit);
this.index=ko.observable(C)
});
this.showAddonInclusiveLineItems=ko.computed(function(){return this.addOnList().length>0||this.addonInclusiveLineItems().length>0
},this);
this.currencySymbol=ko.observable(j.currencySymbol);
this.currencySuffix=ko.observable(j.currencySuffix);
this.alternateCurrencySymbol=ko.observable(j.alternateCurrencySymbol);
this.alternateCurrencySuffix=ko.observable(j.alternateCurrencySuffix);
this.alternateEstimatedTotal=ko.observable(j.alternateEstimatedTotal);
this.toggleAppxLabel=y.toggleAppxLabel;
this.alternateEstimatedTotalDriverCharges=ko.observable(j.alternateEstimatedTotalDriverCharges);
this.isDisplayAlternateCurrency=ko.observable(j.showCurrencyConversion);
this.totalRentalOptions=ko.observable(j.totalRentalOptions);
this.isSavingsInNegative=ko.computed(function(){return j.totalSavings<0?true:false
},this);
this.totalSavings=ko.computed(function(){return j.totalSavings<0?Math.abs(j.totalSavings).toFixed(2):j.totalSavings
},this);
this.hideTotalSavings=ko.computed(function(){if(isHideTotalSavings()||y.hideTotalSavings){return true
}return false
});
this.totalPrice=ko.observable(j.totalPrice);
this.totalDriverCharges=ko.observable(j.totalDriverCharges);
this.differenceAmount=ko.observable(y.differenceAmount);
this.showNegate=ko.observable(y.showNegate);
this.isPrepayRes=ko.observable(y.isPrepayRes);
this.total=this.totalPrice;
this.totalDriver=this.totalDriverCharges;
this.totalDriverChargesDecimal="";
this.totalDecimal="";
this.estimatedTotal=ko.observable(j.totalPrice);
this.estimatedTotalDollars=this.estimatedTotal;
this.estimatedTotalCents="";
this.amountPaid=ko.observable(y.amountPaid);
this.additionalInfo=ko.observableArray(y.reservationAdditionalInfo);
this.additionalInfoAvailable=(typeof y.reservationAdditionalInfo==="undefined")?false:true;
var p=y.customerName;
this.isContractApplied=ko.computed(function(){if(typeof p!=="undefined"){return true
}return false
});
this.isDisplaySavings=ko.observable(y.isDisplaySavings);
this.isDisplayDiscountApplied=ko.observable(y.isDisplayDiscountApplied);
this.isPayNowAvailable=ko.observable(y.isPayNowAvailable);
this.isLoggedInAlamoInsider=ko.observable(y.isLoyaltyUser);
this.isAIDiscountApplied=ko.computed(function(){return(this.isPayNowAvailable&&isLoggedInAlamoInsider)
});
var p=y.customerName;
this.isContractApplied=ko.computed(function(){if(typeof p!=="undefined"){return true
}return false
});
var z=y.paymentInfo;
this.paymentInfo=ko.observable(z);
if(z!=null){this.billingNumber=ko.observable(z.billingNumber);
this.paymentType=ko.observable(z.paymentType);
this.totalPaid=ko.observable(z.totalPaid);
this.authorizedAmount=ko.observable(z.authorizedAmount)
}this.isModifyResPath=ko.observable(y.isModifyResPath);
this.confirmationMessageInfoText=ko.computed(function(){var C=null;
if((w.reservationCheckedIn||w.reservationCounterBypassed)&&!y.reservationCancelled){C=getConfirmationMessageCheckInInfoText()
}else{if(y.reservationCancelled){C=getConfirmationCancelationInfoText()
}else{if(y.isModifyResPath){C=getConfirmationMessageModifyInfoText();
return C
}else{if(y.isEnableDriveAllianceAtChannel&&y.pickUp.enableDriveAlliance){C=getDriveAllianceConfirmationMessageInfoText()
}else{C=getConfirmationMessageInfoText()
}}}}var B=ReplaceTokenInText("${email}",driverEmail(),C);
return B
});
var o=(typeof y.thirdPartyEmail==="undefined")?false:y.thirdPartyEmail;
var k=(typeof y.reservationCancelled==="undefined")?false:y.reservationCancelled;
this.isReservationCancelled=k;
this.isPendingReservation=(typeof y.isPendingReservation==="undefined")?false:y.isPendingReservation;
if(isPendingReservation){globalMessagesKO.pushMessage({code:"",fieldName:"",messageScope:"GLOBAL",messageSeverity:"info",message:getPendingMessageInfoText()})
}else{if(!isHideConfirmationText()&&!isPendingReservation){globalMessagesKO.pushMessage({code:"",fieldName:"",messageScope:"GLOBAL",messageSeverity:"success",message:confirmationMessageInfoText()});
if(o!=false){globalMessagesKO.pushMessage({code:"",fieldName:"",messageScope:"GLOBAL",messageSeverity:"success",message:getConfirmationMessagePartnerInfoText()+o})
}}}this.printResConfirmationText=ko.computed(function(){var C=getPrintResConfirmationText();
var B=ReplaceTokenInText("${reservationNumber}",confirmationNumber(),C);
return B
});
this.printResCancellationText=ko.computed(function(){var C=getPrintResCancellationText();
var B=ReplaceTokenInText("${reservationNumber}",confirmationNumber(),C);
return B
});
this.printCheckInConfirmationText=ko.computed(function(){var C=getPrintCheckInConfirmationText();
var B=ReplaceTokenInText("${reservationNumber}",confirmationNumber(),C);
return B
});
this.startNewReservationText=ko.computed(function(){var B=getNewReservationText();
return B
});
this.cancelReservationText=ko.computed(function(){var B=getCancelReservationText();
return B
});
this.barCodeSuffix=ko.computed(function(){var C=getImgPath();
var B=C+confirmationNumber().substring(0,2)+"/"+confirmationNumber().substring(2,4)+"/"+confirmationNumber()+".png";
return B
});
this.isGuaranteedResPayNow=y.reservation.baseReservation.guaranteedResPayNow;
this.isGuaranteedResPayLater=y.reservation.baseReservation.guaranteedResPayLater;
this.cancelReservationModalPathHref=ko.computed(function(){var B=getCancelReservationModalPath()+".modal.html?isGuaranteedResPayNow="+isGuaranteedResPayNow+"&isGuaranteedResPayLater="+isGuaranteedResPayLater;
return B
});
this.cancelReservationOciModalPathHref=ko.computed(function(){var B=getCancelReservationOciModalPath()+".modal.html?isGuaranteedResPayNow="+isGuaranteedResPayNow+"&isGuaranteedResPayLater="+isGuaranteedResPayLater;
return B
});
this.prepayCancelReservationModalPathHref=ko.computed(function(){var B=getPrepayCancelReservationModalPath()+".modal.html?isGuaranteedResPayNow="+isGuaranteedResPayNow+"&isGuaranteedResPayLater="+isGuaranteedResPayLater;
return B
});
this.prepayCancelReservationOciModalPathHref=ko.computed(function(){var B=getPrepayCancelReservationOciModalPath()+".modal.html?isGuaranteedResPayNow="+isGuaranteedResPayNow+"&isGuaranteedResPayLater="+isGuaranteedResPayLater;
return B
});
this.pickUpWayFindingModalPathHref=ko.computed(function(){var C=getWayFindingModalPath();
var B=C+".modal.html/peopleSoftId="+a.peopleSoftId;
if(w.customerNumber!=null){B=B+"/customerNumber="+w.customerNumber
}if(w.reservationCounterBypassed){B=B+"/bypass=true"
}if(w.levelOfServiceCode){B=B+"/levelOfServiceCode="+w.levelOfServiceCode
}if(null!=y.insiderStateCode){B=B+"/insiderStateCode="+y.insiderStateCode
}if(showVirginAtlantic()){B=B+"/virginAtlantic=true"
}B=B+".html";
return B
});
this.dropOffWayFindingModalPathHref=ko.computed(function(){var C=getWayFindingModalPath();
var B=C+".modal.html/peopleSoftId="+l.peopleSoftId;
if(w.customerNumber!=null){B=B+"/customerNumber="+w.customerNumber
}if(w.reservationCounterBypassed){B=B+"/bypass=true"
}if(w.levelOfServiceCode){B=B+"/levelOfServiceCode="+w.levelOfServiceCode
}if(null!=y.insiderStateCode){B=B+"/insiderStateCode="+y.insiderStateCode
}if(showVirginAtlantic()){B=B+"/virginAtlantic=true"
}B=B+".html";
return B
});
this.dropOffLocationPathHref=ko.computed(function(){var C=getLocationsDetailsPath();
var B=C+"/location="+l.peopleSoftId+".html";
return B
});
this.pickUpLocationPathHref=ko.computed(function(){var C=getLocationsDetailsPath();
var B=C+"/location="+a.peopleSoftId+".html";
return B
});
var t=y.afterHoursModel;
this.afterhourpickup=ko.observable(typeof y.pickupAfterHours==="undefined"?false:y.pickupAfterHours);
this.afterhourdropoff=ko.observable(typeof y.dropoffAfterHours==="undefined"?false:y.dropoffAfterHours);
this.pickupAfterHoursPolicy=ko.observable(y.pickupLocationAfterHoursPolicy);
this.dropoffAfterHoursPolicy=ko.observable(y.dropoffLocationAfterHoursPolicy);
var b=getPolicyDetailModalPath();
this.afterhoursPolicyUrl=function(){var C=b+".modal.html";
var B=C+"?stationId="+a.stationId;
if(w.customerNumber!=null){B=B+"&customerNumber="+w.customerNumber
}return B
}.bind(this);
this.displayFrequentTravelerProgram=ko.computed(function(){var B=isLoyaltyProgramDisabled();
if(this.frequentTravelerProgram){return !B
}return false
});
this.displayArrivingAirlineInfo=ko.computed(function(){var B=isArrivingAirlineDisplayDisabled();
if(this.airline){return !B
}return false
});
this.displayInsiderNumber=ko.computed(function(){var B=isInsiderNumberDisplayDisabled();
if(i.membershipNumber){return !B
}return false
});
var f=y.allowedReservationAction;
this.cancelAllowed=f.cancelAllowed;
this.checkinAllowed=f.checkInAllowed;
this.modifyAllowed=f.modifyAllowed;
this.modifyLinkEnabled=ko.computed(function(){var B=isHideModifyResLinks();
if(this.modifyAllowed){return !B
}return false
});
this.checkinOnlyEnabled=ko.computed(function(){var B=isHideModifyResLinks();
if(!B){return this.checkinAllowed
}return false
});
this.printResNumberText=ko.computed(function(){var C=getPrintResNumberText();
var B=ReplaceTokenInText("${reservationNumber}",confirmationNumber(),C);
return B
});
this.pfHowToFindUsSection=ko.observable(typeof y.howToFindUsSectionText==="undefined"?"":y.howToFindUsSectionText);
this.pfImportantRemindersSection=ko.observable(y.importantRemindersSectionText);
this.checkInDriverIdList=ko.observableArray(i.legalIdsList);
this.checkInInfo=y.checkInInfo;
this.checkInPaymentInfo=null;
if(checkInInfo){this.primaryDriverInfo=checkInInfo.primaryDriverInfo;
if(primaryDriverInfo){this.primaryDriverName=primaryDriverInfo.name;
this.primaryDriverAddress=primaryDriverInfo.address;
this.primaryDriverLicenseNumber=primaryDriverInfo.licenseMaskedLastFourDigits;
this.primaryDriverIssueCountry=primaryDriverInfo.issueCountry;
this.primaryDriverExpDate=primaryDriverInfo.expDate;
this.primaryDriverIssuingDate=primaryDriverInfo.licenseIssueDate;
this.primaryDriverDateOfBirth=primaryDriverInfo.dateOfBirth
}this.additionalDriverInfoList=ko.observableArray(checkInInfo.additionalDriverInfoList);
if(additionalDriverInfoList()!==null&&additionalDriverInfoList().length!==0){$.each(additionalDriverInfoList(),function(C,B){this.additionalDriverName=B.name;
this.additionalDriverAddress=B.address;
this.additionalDriverLicenseNumber=B.licenseMaskedLastFourDigits;
this.additionalDriverIssueCountry=B.issueCountry;
this.additionalDriverExpDate=B.expDate;
this.additionalDriverIssuingDate=B.licenseIssueDate;
this.additionalDriverDateOfBirth=B.dateOfBirth;
this.additionalDriverIndex=C+1
})
}this.checkInPaymentInfo=checkInInfo.paymentInfo;
if(checkInPaymentInfo){this.checkInPaymentType=checkInPaymentInfo.paymentType
}}this.isPrepayOrGuarantedRes=ko.observable(y.isPrepayOrGuarantedRes);
this.bypassReservation=ko.computed(function(){if(this.checkInPaymentInfo!=null){return true
}return false
});
this.checkInReservation=ko.computed(function(){if(this.checkInInfo!=null&&!bypassReservation()){return true
}return false
});
this.isTACheckedInorBypassedRes=ko.computed(function(){if(isTAPath()=="true"&&(checkInReservation()||bypassReservation())){globalMessagesKO.pushMessage({code:"",fieldName:"",messageScope:"GLOBAL",messageSeverity:"success",message:getTACheckinBypassMessageInfoText()});
return true
}return false
});
this.isTABypassedRes=ko.computed(function(){if(isTAPath()=="true"&&bypassReservation()){return true
}return false
});
this.showCheckInPaymentInfo=(bypassReservation()&&!isPrepayOrGuarantedRes())?true:false;
this.checkInPathHref=ko.computed(function(){if(this.checkInReservation()){return getCheckinLinkPath()+"?modify=true"
}else{return getBypassLinkPath()+"?modify=true"
}});
this.emailLinkModalPathHref=ko.computed(function(){var C=getEmailLinkModalPath();
var B=C+".modal.html?confirmationNumber="+this.confirmationNumber()+"&firstName="+encodeURIComponent(this.firstName())+"&lastName="+encodeURIComponent(this.lastName());
if(this.bypassReservation()){B=B+"&barcodeUrl="+this.barCodeSuffix()
}return B
});
this.retailReservation=ko.computed(function(){if(!checkInReservation()&&!bypassReservation()){return true
}return false
});
if(this.checkInReservation()){this.printSelectMode=ko.observable("checkIn")
}else{if(this.bypassReservation()){this.printSelectMode=ko.observable("bypass")
}else{if(!this.bypassReservation()&&!this.isAlamoRwd){this.printSelectMode=ko.observable("responsive")
}else{this.printSelectMode=ko.observable("retail")
}}}this.hidePrintModal=typeof hidePrintModal==="undefined"||null==hidePrintModal?false:hidePrintModal;
if(bypassReservation()&&(!isBypassPrint()&&this.hidePrintModal==false)&&!y.reservationCancelled){var u=getPrintModalURL()+".modal.html";
initModal("sm","true",u)
}this.enableCancelReservation=ko.computed(function(){if(!this.cancelAllowed){return false
}if(isHideCancelReservation()){return false
}if(!this.retailReservation()){return false
}return true
});
this.enableCancelOci=ko.computed(function(){if(!this.cancelAllowed){return false
}if(isHideCancelReservation()){return false
}if(this.retailReservation()){return false
}return true
});
this.isConfirmationWayfindingAvailableOne=ko.observable(null!==y.wayFindingData&&y.wayFindingData.wayFindingDataOne);
this.isConfirmationWayfindingAvailableTwo=ko.observable(null!==y.wayFindingData&&y.wayFindingData.wayFindingDataTwo);
this.isConfirmationWayfindingAvailable=this.isConfirmationWayfindingAvailableOne()||this.isConfirmationWayfindingAvailableTwo();
var m=this.isConfirmationWayfindingAvailable===true?true:false;
if(!m){$(".primaryRail.blueRail").addClass("tourWayFindingHide")
}var d=y.wayFindingData;
this.confirmationShortDescriptionOne=ko.observable("");
this.confirmationDirectionsOne=ko.observable("");
this.confirmationDirectionsOneTexts=ko.observable("");
if(this.isConfirmationWayfindingAvailableOne()){this.confirmationShortDescriptionOne=ko.observable(null==d.shortDescriptionOne?"":d.shortDescriptionOne);
this.wayFindingOneDetail=ko.observableArray(d.wayFindingOneDetail);
$.each(wayFindingOneDetail(),function(C,B){this.imageLocation=B.imageLocation;
this.text=B.text
});
this.confirmationDirectionsOneTexts=ko.computed(function(){return d.textsOne.join("<br>")
});
if(null!==d.pathOne){$.ajax({url:d.pathOne.path+".html",contentType:"application/x-www-form-urlencoded; charset=UTF-8",success:function(B){self.confirmationDirectionsOne(B);
$(".wayFindingCounterParOneContent").addClass("wayFindingPrint"+d.textsOne.length)
}})
}}this.confirmationShortDescriptionTwo=ko.observable("");
this.confirmationDirectionsTwo=ko.observable("");
this.confirmationDirectionsTwoTexts=ko.observable("");
if(this.isConfirmationWayfindingAvailableTwo()){this.confirmationShortDescriptionTwo=ko.observable(null==d.shortDescriptionTwo?"":d.shortDescriptionTwo);
this.wayFindingTwoDetail=ko.observableArray(d.wayFindingTwoDetail);
$.each(wayFindingTwoDetail(),function(B,C){this.imageLocation=C.imageLocation;
this.text=C.text
});
this.confirmationDirectionsTwoTexts=ko.computed(function(){return d.textsTwo.join("<br>")
});
if(null!==d.pathTwo){$.ajax({url:d.pathTwo.path+".html",contentType:"application/x-www-form-urlencoded; charset=UTF-8",success:function(B){self.confirmationDirectionsTwo(B);
if($(B).length==0){$(".wayFindingCounterParTwoContent").parent().css("display","none")
}$(".wayFindingCounterParTwoContent").addClass("wayFindingPrint"+d.textsTwo.length)
}})
}}this.displayWayFindingModal=ko.computed(function(){var B=isWayFindingModalDisabled();
if(B||!this.isConfirmationWayfindingAvailable){return false
}else{return true
}})
}var UrlBuilder=function(b,a){output=typeof b==="undefined"||null==b?"":b;
a=typeof a==="undefined"||null==a?"":a;
if(""!=a){if(a.indexOf("?")>-1){if(output.indexOf("?")==0){output=output+a.replace("?","")
}else{if(output.indexOf("?")>-1){output=output+a.replace("?","&")
}else{output=output+a
}}}else{if(output.indexOf("?")>-1){if(output.length>1){output=output+"&"
}output=output+a
}else{output=output+"?"+a
}}}return output
};
var Deeplink=function(b,d,a){baseUrl=typeof b==="undefined"||null==b?"":b;
var c=typeof d==="undefined"||null==d?"":d;
if(baseUrl.indexOf("?")<0&&baseUrl.indexOf("/")<0){baseUrl="?"+baseUrl;
c=c.replace("?","")
}output=UrlBuilder(baseUrl,c);
output=UrlBuilder(output,a);
if(output.indexOf("lastName")>=0&&output.indexOf("firstName")>=0&&output.indexOf("membershipNumber")>=0){output=UrlBuilder(output,"dealAIDeeplinked=true")
}return output
};
renderComplete=function(a){};
$(document).ready(function(){$(".tripMore").live("click",function(){$(".tripDirections div.longDescription").toggle();
$(".tripMore").hide();
return false
})
});
var ConfirmationSidebar=function(b){this.confirmationstatus=ko.observable(b.status);
this.bypassavailable=ko.observable(b.bypassAvailable);
this.alamoInsider=ko.observable(b.alamoInsider);
this.enableDriveAlliance=b.enableDriveAlliance;
this.customCheckInPath=ko.observable(b.customCheckInPath);
this.checkInCompleted=ko.computed(function(){return(this.confirmationstatus()==="checkinCompleted")
});
this.bypassCompleted=ko.computed(function(){return(this.confirmationstatus()==="bypassCompleted")
});
this.responsiveDefault=ko.computed(function(){return(this.confirmationstatus()==="responsiveDefault")
});
this.responsiveECMember=ko.computed(function(){return(this.confirmationstatus()==="responsiveECMember")
});
this.confdefaultstatus=ko.computed(function(){return(this.confirmationstatus()==="default")
});
this.viewOnlyStatus=ko.computed(function(){return(this.confirmationstatus()==="viewOnly")
});
this.bypassCounter=ko.computed(function(){return(this.confdefaultstatus()||this.responsiveDefault())&&this.bypassavailable()
});
this.checkIn=ko.computed(function(){return(this.confdefaultstatus()||this.responsiveDefault())&&!this.bypassavailable()
});
this.firstName=ko.observable(b.firstName);
this.lastName=ko.observable(b.lastName);
this.checkInPath=ko.observable(b.checkInPath);
if(b.ReservationStatus=="pending"){var e=getPendingModalURL()+".modal.html";
initModal("sm","true",e);
$(function(){$(".buttonSection").hide()
})
}if(b.pickUpLocation!="undefined"){this.wayFindingModalPathHref=ko.computed(function(){var g=getWayFindingModalPath();
var f=g+".modal.html/peopleSoftId="+b.pickUpLocation.peopleSoftId;
if(b.reservation.customerNumber!==null){f=f+"/customerNumber="+b.reservation.customerNumber
}if(b.reservation.reservationCounterBypassed){f=f+"/bypass=true"
}f=f+".html";
return f
});
this.pickUpDateTime=ko.observable(b.pickUpLocation.pickUpDateTime);
this.dropOffDateTime=ko.observable(b.pickUpLocation.dropOffDateTime);
this.pickUpLocationName=ko.observable(b.pickUpLocation.locationName);
this.pickUpLocationCity=ko.observable(b.pickUpLocation.address.city);
this.pickUpLocationStateProvinceCode=ko.observable(b.pickUpLocation.address.stateProvinceAbbreviation);
this.pickUpLocationPostalCode=ko.observable(b.pickUpLocation.address.postalCode);
this.pickUpLocationCountryCode=ko.observable(b.pickUpLocCountryName);
this.pickUpAddressLines=ko.observableArray();
var d;
d=b.pickUpLocation.address.addressLines;
for(var a=0;
a<d.length;
a++){pickUpAddressLines.push({line:d[a]})
}this.pickUpStandardOperatingHours=ko.observableArray();
var c;
c=b.pickUpOperatingHoursList;
for(var a=0;
a<c.length;
a++){pickUpStandardOperatingHours.push({day:c[a].day,hour:c[a].hour,closed:c[a].closed,open24Hours:c[a].open24Hours})
}this.pickUpLocationPhone=ko.observable(b.defaultPhoneNumber);
this.isAfterHoursAvailable=ko.observable(b.afterHoursAvailable)
}this.isLosWayfindingAvailable=ko.observable(b.isLosWayfindingAvailable);
this.skipBypassAvailable=ko.computed(function(){var f=b.bypassAvailable===true?true:false;
if(!f){$(".primaryRail.blueRail").addClass("tourBypassHide")
}});
this.kioskElgibleflag=ko.computed(function(){var f=b.kioskEligibleStatus==="Y"?true:false;
if(!f){$(".primaryRail.blueRail").addClass("hideBlueRail")
}return f
});
this.importantRemindersSection=ko.observable(b.importantRemindersSectionText);
this.howToFindUsSection=ko.observable(b.howToFindUsSectionText)
};
var VehicleDetail=function(a){var b=(typeof a.payLaterContractUsed==="undefined")?false:a.payLaterContractUsed;
if(b==true){this.paymentCheck=ko.observable("pay-later")
}else{this.paymentCheck=ko.observable("pay-now")
}this.data=ko.observable(new VehicleDetailData(a));
this.learnMoreModalPathHref=ko.computed(function(){var c=getLearnMoreModal()+".modal.html";
return c
});
this.learnMoreModalLinkText=ko.computed(function(){var c=getLearnMoreModalLinkText();
return c
})
};
function VehicleDetailData(b){this.pricingMatrixData=ko.observable(new PricingMatrixData(b));
this.upgradeAvailable=ko.observable(!(b.upgradeVehicleRate===undefined));
if(this.upgradeAvailable()){this.upgradeVehicleRateDifference=ko.observable(new GenericCurrency({amount:b.upgradeVehicleRateDiff,currencyCode:b.upgradeVehicleRate.productCurrencyCode,rateCode:"D"}));
this.upgradeVehicleRate=ko.observable(new GenericCurrency({currencyCode:b.upgradeVehicleRate.productCurrencyCode,amount:b.upgradeVehicleRate.totalSeatPrice}))
}var a=null;
if(b.bookingCountryDetail){a=doi.build({src:b.bookingCountryDetail.resourcePath.path,ext:b.bookingCountryDetail.imageFlagNodePath.extension,lastModified:b.bookingCountryDetail.imageFlagNodePath.lastModified,size:"full",resolution:"high",imageStyle:"imageFlagNodePath"})
}this.countryFlagPath=ko.observable(a);
var c=this.pricingMatrixData().selectedVehicleCategoryCode();
if(this.pricingMatrixData().findVehicleIndex(vehicleDetailModalInputs.sipp)>=0){c=vehicleDetailModalInputs.sipp
}if(c!=null){this.selectedVehicleIndex=ko.observable(this.pricingMatrixData().findVehicleIndex(c))
}else{this.selectedVehicleIndex=ko.observable(0)
}this.selectedVehicleNumber=ko.computed(function(){return this.selectedVehicleIndex()+1
},this);
this.vehicleList=ko.observableArray([]);
this.numberOfVehicles=ko.computed(function(){return this.pricingMatrixData().vehicles().length
},this);
this.canGoLeft=ko.computed(function(){return this.selectedVehicleIndex()>0
},this);
this.canGoRight=ko.computed(function(){return this.selectedVehicleIndex()<(this.numberOfVehicles()-1)
},this);
this.goLeft=function(){if(this.canGoLeft()){this.selectedVehicleIndex(this.selectedVehicleIndex()-1)
}};
this.goRight=function(){if(this.canGoRight()){this.selectedVehicleIndex(this.selectedVehicleIndex()+1)
}};
this.currentVehicle=ko.computed(function(){return this.pricingMatrixData().vehicles()[this.selectedVehicleIndex()]()
},this);
if(typeof cmCreateProductviewTagIfEnabled==="function"){cmCreateProductviewTagIfEnabled(this.currentVehicle().vehicleCategoryCode(),this.currentVehicle().name())
}}function PricingMatrixQEnum(a){return a[Math.floor(Math.random()*a.length)]
}function PricingMatrixQEnumV(c,b,f){var d=[];
var a=Math.random()*(f-b)+b;
for(var e=0;
e<a;
e++){d.push(c[Math.floor(Math.random()*c.length)])
}return d
}function classNameOf(b){if(b===undefined){return"undefined"
}if(b===null){return"null"
}var a=Object.prototype.toString.call(b);
return a.match(/^\[\s*[^\s]*[\s]*([^\s\]]*)\]$/)[1]+""
}function propList(c){var a="<"+classNameOf(c)+">:";
for(var b in c){a=a+b+"<"+classNameOf(c[b])+">, "
}return a
}function isObject(a){return classNameOf(a)==="Object"
}function isArray(a){return classNameOf(a)==="Array"
}function isFunction(a){return classNameOf(a)==="Function"
}function isPrimitive(a){var b=classNameOf(a);
return b==="Number"||b==="Boolean"||b==="null"||b==="undefined"||b==="Function"
}function defaultTo(b,a){if(a===null||typeof a==="undefined"){return b
}return a
}var PricingMatrixPrice=function(b){var c=this;
this.locationDependentFont=ko.observable(b.locationDependentFont);
this.packageRate=b.packageRate;
this.normalRateDisplay=ko.computed(function(){if(b.locationDependentFont===false&&b.packageRate===false){return true
}return false
});
this.saving=ko.observable(b.saving===undefined?undefined:new GenericCurrency(b.saving));
this.showSavings=ko.computed(function(){return !(this.saving()===undefined)
},this);
this.rate=ko.observable(new GenericCurrency(b.rate));
this.total=ko.observable(new GenericCurrency(b.total));
this.priceBreakDown=ko.observable(new GenericVehiclePriceBreakdown({pay:b.type,sipp:b.vehicleCategoryCode,currencyCode:b.total.currencyCode}));
if(b.costItem!==undefined){for(var a=0;
a<b.costItem.length;
a++){this.costItem.push({desc:ko.observable(b.costItem[a].desc),cost:ko.observable(new GenericCurrency(b.costItem[a]))})
}}this.contractDiscountDisplayableAmount=ko.observable(b.contractDiscountDisplayableAmount);
this.helperText=ko.observable(new GenericHelperText(b.helperText));
this.headerHelperText=ko.observable(new GenericHelperText(b.headerHelperText));
this.isAvailable=ko.computed(function(){return this.rate().isValid()&&this.total().isValid()
},this);
this.type=ko.observable(b.type);
this.isPayNow=ko.computed(function(){return this.type()==="payNow"
},this);
this.isPayLater=ko.computed(function(){return this.type()==="payLater"
},this);
this.onActivate=function(d,f){c.priceBreakDown().triggerLoad()
}
};
var PricingMatrixVehicle=function(b){this.paynowAvailable=ko.observable(b.paynowAvailable);
this.description=ko.observable(b.vehicle.vehicleTranslation.description);
this.simularVehicles=ko.observable(b.vehicle.vehicleTranslation.similarVehicles);
this.capacityLuggage=ko.observable(b.vehicle.capacityLuggage);
this.capacityPeople=ko.observable(b.vehicle.capacityPeople);
this.vehicleFeatures=ko.observableArray();
var e=b.vehicleFeaturesMap;
this.locationPhoneNumber=b.locationPhoneNumber;
for(var g in e){var f=e[g];
if(f!=null){this.vehicleFeatures.push({name:f.name,code:f.vehicleFeatureCode})
}}this.features=ko.observableArray(b.vehicle.features);
this.featuresShort=ko.observableArray(defaultTo([],b.vehicle.featuresShort));
this.featuresShortText=ko.computed(function(){var j="";
if(this.featuresShort().length<=0){return j
}j+=this.featuresShort()[0];
for(var i=1;
i<this.featuresShort().length;
i++){j+=", "+this.featuresShort()[i]
}return j
},this);
var c="";
if(b.vehicle.imageLargeThreeQuarterNodePath!=null){c=doi.build({src:b.vehicle.resourcePath.path,ext:b.vehicle.imageLargeThreeQuarterNodePath.extension,lastModified:b.vehicle.resourcePath.lastModified,size:320,resolution:"high",imageStyle:"imageLargeThreeQuarterNodePath"})
}this.largeImagePath=ko.observable(c);
this.vehicleCategoryCode=ko.observable(b.vehicle.vehicleCategoryCode);
this.availableStatusCode=ko.observable(b.vehicleAvailabilityStatus);
this.enabled=ko.observable(b.vehicle.enableReservationPath);
this.selected=ko.observable(b.selected);
this.discounts=ko.observableArray([]);
this.onRequestVehicle=b.onRequestVehicle;
this.guaranteedVehicle=b.guaranteedVehicle;
this.disableSelectionOfGuaranteeOnRequestVehicle=b.disableSelectionOfGuaranteeOnRequestVehicle;
var h=this;
this.isVehicleSelectable=ko.computed(function(){if(h.onRequestVehicle===true||h.guaranteedVehicle===true){if(h.disableSelectionOfGuaranteeOnRequestVehicle===true){return false
}}return true
});
this.termsAndConditionsRequired=ko.observable(b.vehicle.termsAndConditionsRequired);
var d=b.vehiclePrimaryRateSummary.vehicleTotalPrice;
for(var a=0;
a<b.discounts.length;
a++){this.discounts.push(b.discounts[a])
}this.payNowSavings=ko.observable(new GenericCurrency({amount:d.prepaySavingsAmount,currencyCode:d.productCurrencyCode}));
this.payNow=ko.observable(new PricingMatrixPrice({saving:{amount:d.prepaySavingsAmount,currencyCode:d.productCurrencyCode,rateCode:d.highestUsedRateType},rate:{amount:b.vehiclePrimaryRateSummary.highestUsedPayNowRate,currencyCode:b.vehiclePrimaryRateSummary.pickupCurrencyCode,rateCode:b.vehiclePrimaryRateSummary.highestUsedRateType},total:{amount:d.prepayTotalPrice,currencyCode:b.vehiclePrimaryRateSummary.pickupCurrencyCode},type:"payNow",vehicleCategoryCode:this.vehicleCategoryCode(),contractDiscountDisplayableAmount:d.contractDiscountDisplayableAmount,helperText:{template:{name:"GenericVehicleCostBreakdown"},iconType:"squareQuestion"},locationDependentFont:b.locationDependentFont,packageRate:b.vehiclePrimaryRateSummary.packageRate}));
this.payLater=ko.observable(new PricingMatrixPrice({rate:{amount:b.vehiclePrimaryRateSummary.highestUsedPayLaterRate,currencyCode:b.vehiclePrimaryRateSummary.pickupCurrencyCode,rateCode:b.vehiclePrimaryRateSummary.highestUsedRateType},total:{amount:d.totalPrice,currencyCode:b.vehiclePrimaryRateSummary.pickupCurrencyCode},type:"payLater",vehicleCategoryCode:this.vehicleCategoryCode(),helperText:{template:{name:"GenericVehicleCostBreakdown"},iconType:"squareQuestion"},locationDependentFont:b.locationDependentFont,packageRate:b.vehiclePrimaryRateSummary.packageRate}));
this.contracualDiscount=ko.observable(new PricingMatrixPrice({rate:{amount:d.contractualDiscountAmount,currencyCode:b.vehiclePrimaryRateSummary.pickupCurrencyCode,rateCode:d.highestUsedRateType},total:{amount:d.contractualDiscountAmount,currencyCode:b.vehiclePrimaryRateSummary.pickupCurrencyCode},type:"payNow",vehicleCategoryCode:this.vehicleCategoryCode(),contractDiscountDisplayableAmount:d.contractDiscountDisplayableAmount,helperText:{template:{name:"GenericVehicleCostBreakdown"},iconType:"squareQuestion"},helperTextInfo:{iconType:"info"},locationDependentFont:b.locationDependentFont,packageRate:b.vehiclePrimaryRateSummary.packageRate}));
this.couponSavings=ko.observable(new PricingMatrixPrice({rate:{amount:d.couponSavingsAmount,currencyCode:b.vehiclePrimaryRateSummary.pickupCurrencyCode,rateCode:d.highestUsedRateType},total:{amount:d.totalPriceWithoutSavings,currencyCode:b.vehiclePrimaryRateSummary.pickupCurrencyCode},type:"payNow",vehicleCategoryCode:this.vehicleCategoryCode(),name:b.vehicle.vehicleTranslation.name,helperText:{template:{name:"GenericVehicleCostBreakdown"},iconType:"squareQuestion"},helperTextInfo:{iconType:"info"},locationDependentFont:b.locationDependentFont,packageRate:b.vehiclePrimaryRateSummary.packageRate}));
this.totalSavings=ko.observable(new PricingMatrixPrice({rate:{amount:d.totalSavingsAmount,currencyCode:b.vehiclePrimaryRateSummary.pickupCurrencyCode,rateCode:d.highestUsedRateType},total:{amount:d.totalPriceWithoutSavings,currencyCode:b.vehiclePrimaryRateSummary.pickupCurrencyCode},type:"payNow",vehicleCategoryCode:this.vehicleCategoryCode(),helperText:{template:{name:"GenericVehicleCostBreakdown"},iconType:"squareQuestion"},helperTextInfo:{iconType:"info"},locationDependentFont:b.locationDependentFont,packageRate:b.vehiclePrimaryRateSummary.packageRate}));
if(b.coupon===undefined){this.showUpgradeCoupon=ko.observable(false);
this.showDollarOffCoupon=ko.observable(false);
this.FreeDayCoupon=ko.observable(false);
this.couponDescription=ko.observable(" ");
this.couponLongDescription=ko.observable(" ")
}else{this.showUpgradeCoupon=ko.observable(b.coupon.coupon.upgradeCoupon);
this.showDollarOffCoupon=ko.observable(b.coupon.coupon.dollarOffCoupon);
this.FreeDayCoupon=ko.observable(b.coupon.coupon.freeDayCoupon);
this.couponDescription=ko.observable(b.coupon.coupon.description);
this.couponLongDescription=ko.observable(b.coupon.couponDescription)
}this.hasCoupon=ko.computed(function(){return this.showUpgradeCoupon()||this.showDollarOffCoupon()||this.FreeDayCoupon()
},this);
this.hasAnyDiscounts=true;
this.showCouponSavings=ko.observable(false);
this.contractDiscountWithoutAmount=false;
this.contractDiscountDisplayableAmount=false;
this.showTotalSavings=false;
this.showContractDiscount=false;
this.showFreeDayCoupon=ko.observable(false);
this.showContractDiscountAmount=true;
this.showDollarOff=ko.observable(false);
if(d.contractDiscountDisplayableAmount&&!(this.showUpgradeCoupon())){this.showTotalSavings=true
}else{if(this.FreeDayCoupon()&&d.couponDiscountApplied){this.showFreeDayCoupon(true)
}else{if(this.showDollarOffCoupon()&&d.couponDiscountApplied){this.showDollarOff=ko.observable(true)
}else{if(this.showUpgradeCoupon()&&b.couponUpgradeVehicleAvailable){this.showCouponSavings(true)
}else{if(d.contractDiscountApplied&&!(this.showUpgradeCoupon())){this.showContractDiscount=true;
this.showContractDiscountAmount=false
}else{this.hasAnyDiscounts=false
}}}}}this.upgradeAvailable=ko.computed(function(){return this.showUpgradeCoupon()
},this);
this.name=ko.observable(b.vehicle.vehicleTranslation.name);
this.upgradeName=ko.observable(b.upgradeVehicleName);
this.isAvailable=ko.computed(function(){return this.availableStatusCode()==="A"
},this);
this.hasDiscount=ko.computed(function(){return this.discounts().length>0
},this);
this.canPayNow=ko.computed(function(){if(b.vehiclePrimaryRateSummary.vehicleTotalPrice.prePayAvailable===true&&h.paynowAvailable()===true&&h.isVehicleSelectable()){return true
}return false
},this);
this.canPayLater=ko.computed(function(){return this.payLater().isAvailable()
},this)
};
var PricingMatrixData=function(i){var f=null;
if(typeof i.customerContainer!=="undefined"){if(i.customerContainer.partnerCustomerDetail){f=i.customerContainer.partnerCustomerDetail
}if(i.customerContainer.dealCustomerDetail){f=i.customerContainer.dealCustomerDetail
}}this.showSavings=f==null?true:f.reservationPreference.enableSavings;
this.paynowAvailable=ko.observable(i.paynowAvailable);
this.findVehicleIndex=function(l){for(var m=0;
m<this.vehicles().length;
m++){if(this.vehicles()[m]().vehicleCategoryCode()===l){return m
}}return -1
};
var g=i.vehicleList;
this.vehicles=ko.observableArray([]);
if(i.reservation.currentVehicle===null||i.reservation.currentVehicle===undefined){this.selectedVehicleCategoryCode=ko.observable(null)
}else{this.selectedVehicleCategoryCode=ko.observable(i.reservation.currentVehicle.requestedVehicleCategoryCode)
}this.isPayNow=ko.observable(i.reservation.prepaySelected);
for(var j in g){var h=this.findVehicleIndex(j);
var k=g[j];
var a=ko.computed(function(){var l=getAlamoInsidersText();
return l
});
if((typeof i.dealCouponContainer)!=="undefined"){var b=i.dealCouponContainer.coupon
}var e=(typeof i.dealCouponContainer!=="undefined")?i.dealCouponContainer.coupon.upgradeCoupon:false;
var c=[];
if(k.couponUpgradeVehicleAvailable||k.vehiclePrimaryRateSummary.vehicleTotalPrice.couponDiscountApplied){c.push({name:b.description,description:""})
}if((k.vehiclePrimaryRateSummary.vehicleTotalPrice.contractDiscountApplied||k.vehiclePrimaryRateSummary.vehicleTotalPrice.contractDiscountDisplayableAmount)&&!(e)){if(i.customerContainer!==undefined&&i.customerContainer!==null){if(i.customerContainer.customer.customerName!==undefined&&i.customerContainer.customer.customerName!==null){c.push({name:i.customerContainer.customer.customerName,description:""})
}}if(i.loggedInAI){c.push({name:a,description:""})
}}var d=new PricingMatrixVehicle({vehicleFeaturesMap:k.vehicleFeatureMap,vehicle:k.vehicle,vehicleAvailabilityStatus:k.vehicleAvailabilityStatus,vehiclePrimaryRateSummary:k.vehiclePrimaryRateSummary,discounts:c,coupon:i.dealCouponContainer,paynowAvailable:i.paynowAvailable,locationDependentFont:(typeof i.locationDependentFont!=="undefined"?i.locationDependentFont:false),couponUpgradeVehicleAvailable:k.couponUpgradeVehicleAvailable,upgradeVehicleName:k.upgradeVehicleName,onRequestVehicle:k.onRequestVehicle,guaranteedVehicle:k.guaranteedVehicle,disableSelectionOfGuaranteeOnRequestVehicle:i.disableSelectionOfGuaranteeOnRequestVehicle,locationPhoneNumber:(typeof i.locationPhoneNumber==="undefined")?"":i.locationPhoneNumber});
if(h<0){this.vehicles().push(ko.observable(d))
}else{this.vehicles()[h](d)
}}this.hasDiscount=ko.computed(function(){for(var l=0;
l<this.vehicles().length;
l++){if(this.vehicles()[l]().hasDiscount()){return true
}}return false
},this);
this.canPayNow=ko.computed(function(){for(var l=0;
l<this.vehicles().length;
l++){if(this.vehicles()[l]().canPayNow()){return this.paynowAvailable()
}}return false
},this);
this.canPayLater=ko.computed(function(){for(var l=0;
l<this.vehicles().length;
l++){if(this.vehicles()[l]().canPayLater()){return true
}}return false
},this);
this.selectVehicle=function(l,n,m){var o=this.findVehicleIndex(n);
if(o<0){return
}this.selectedVehicleCategoryCode(n);
this.isPayNow(m==="payNow");
l.submitForm()
}
};
var PricingMatrix=function(a){this.datah=ko.observable(new PricingMatrixData(a))
};
var countryPolicies=function(b){this.countryPolicies=ko.observable(b.policyList);
var a=$("#viewPolicyDetailModalPath").val();
this.buildUrl=function(c){return a+".modal.html?policyCode="+c
}.bind(this)
};
var CrossSell=function(d){var b=d.crossSellResponse;
var c=d.crossSell;
this.driveAlliance=ko.observable(c.driveAlliance);
this.searchCriteria=ko.observable(c.searchCriteria);
this.sourceBrand=ko.observable(c.sourceBrand);
this.targetBrand=ko.observable(c.targetBrand);
this.language=ko.observable(b.language);
this.startDateMonth=ko.observable(b.pickupDateMonth);
this.startDate=ko.observable(b.pickupDate);
this.startDateTime=ko.observable(b.pickupDateTime);
this.endDateMonth=ko.observable(b.dropOffDateMonth);
this.endDate=ko.observable(b.dropOffDate);
this.endDateTime=ko.observable(b.dropOffDateTime);
var a="#crossSellMessage";
if($(a).length){$(a).html(SetMessage($(a).html()))
}a="#ZLcrossSellMessage";
if($(a).length){$(a).html(SetMessage($(a).html()))
}a="#ETcrossSellMessage";
if($(a).length){$(a).html(SetMessage($(a).html()))
}};
var ReplaceTokenInText=function(b,c,e){var a=e.indexOf(b);
if(a==-1){return e
}var d=e.substring(0,a)+c+e.substring(a+b.length);
return d
};
var SetBrandLink=function(c){var b=c;
var a=Setup();
b=ReplaceTokenInText(a.searchCriteria.token,searchCriteria(),b);
b=ReplaceTokenInText(a.language.token,language(),b);
b=ReplaceTokenInText(a.startDateMonth.token,startDateMonth(),b);
b=ReplaceTokenInText(a.startDate.token,startDate(),b);
b=ReplaceTokenInText(a.startDateTime.token,startDateTime(),b);
b=ReplaceTokenInText(a.endDateMonth.token,endDateMonth(),b);
b=ReplaceTokenInText(a.endDate.token,endDate(),b);
b=ReplaceTokenInText(a.endDateTime.token,endDateTime(),b);
return b
};
var SetMessage=function(c){var b=c;
var a=Setup();
b=ReplaceTokenInText(a.searchCriteria.token,searchCriteria(),b);
return b
};
var Setup=function(){var a={};
a.searchCriteria={token:"${searchCriteria}"};
a.language={token:"${language}"};
a.startDateMonth={token:"${startDateMonth}"};
a.startDate={token:"${startDate}"};
a.startDateTime={token:"${startDateTime}"};
a.endDateMonth={token:"${endDateMonth}"};
a.endDate={token:"${endDate}"};
a.endDateTime={token:"${endDateTime}"};
return a
};
var ShowContent=function(a,b){return(a==b)
};
var seamlessBooking=function(a){callStandBy(a,setWaitTime)
};
function callStandBy(a,b){if(CQ.WCM){if(CQ.WCM.isEditMode(true)||CQ.WCM.isDesignMode(true)){}else{sbrowserTimeout(a,b)
}}else{sbrowserTimeout(a,b)
}}var sbrowserTimeout=function(b,a){setTimeout(function(){callIntres(b)
},a*1000)
};
function createNewFormElement(b,a,c){var d=document.createElement("input");
d.type="hidden";
d.name=a;
if(null==c){c=""
}d.value=c;
b.appendChild(d);
return d
}function callIntres(c){var a=document.createElement("form");
a.method="POST";
a.action=c.intresDeeplink.domain+c.intresDeeplink.path;
a.name="seamless";
var e=c.intresParameter;
for(var b in e){var d=e[b];
createNewFormElement(a,b,d)
}createNewFormElement(a,"token",c.intresDeeplink.token);
document.body.appendChild(a);
a.submit()
}var LocationWayFinding=function(c){var b=this;
this.enableDriveAlliance=c.enableDriveAlliance!="undefined"?c.enableDriveAlliance:false;
this.isWayfindingAvailableOne=ko.observable(null!==c.wayFindingData&&c.wayFindingData.wayFindingDataOne);
this.isWayfindingAvailableTwo=ko.observable(null!==c.wayFindingData&&c.wayFindingData.wayFindingDataTwo);
this.isWayfindingAvailable=this.isWayfindingAvailableOne()||this.isWayfindingAvailableTwo();
var a=c.wayFindingData;
this.shortDescriptionOne=ko.observable("");
this.directionsOne=ko.observable("");
if(this.isWayfindingAvailableOne()){this.shortDescriptionOne=ko.observable(null==a.shortDescriptionOne?"":a.shortDescriptionOne);
if(null!==a.pathOne){$.ajax({url:a.pathOne.path+".html",contentType:"application/x-www-form-urlencoded; charset=UTF-8",success:function(d){b.directionsOne(d)
}})
}}this.shortDescriptionTwo=ko.observable("");
this.directionsTwo=ko.observable("");
if(this.isWayfindingAvailableTwo()){this.shortDescriptionTwo=ko.observable(null==a.shortDescriptionTwo?"":a.shortDescriptionTwo);
if(null!==a.pathTwo){$.ajax({url:a.pathTwo.path+".html",contentType:"application/x-www-form-urlencoded; charset=UTF-8",success:function(d){b.directionsTwo(d)
}})
}}};